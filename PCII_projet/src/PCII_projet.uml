<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_h5wAsI1mEeqhUNeKJfLXDg" name="PCII_projet">
    <eAnnotations xmi:id="_jp4hkI1mEeqhUNeKJfLXDg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_jp4hkY1mEeqhUNeKJfLXDg" source="codegen">
        <details xmi:id="_jp4hko1mEeqhUNeKJfLXDg" key="codegenDirectory" value="/PCII_projet/src"/>
        <details xmi:id="_khW8II1mEeqhUNeKJfLXDg" key="AssociatedSourceCode" value="/PCII_projet/src/Main.java;3464508554/1;/PCII_projet/src/control/Avancer.java;2275450280/1;/PCII_projet/src/control/ControlClavier.java;3870629008/1;/PCII_projet/src/control/Effects.java;2152738583/1;/PCII_projet/src/control/Voler.java;1365840173/1;/PCII_projet/src/model/CheckPoint.java;1415287942/1;/PCII_projet/src/model/CheckPointList.java;1185390284/1;/PCII_projet/src/model/Obstacle.java;2030965324/1;/PCII_projet/src/model/Opponent.java;496201834/1;/PCII_projet/src/model/Piste.java;3950911404/1;/PCII_projet/src/model/Vehicule.java;3558100271/1;/PCII_projet/src/view/Affichage.java;39933375/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_kEYsQI1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_kEYsQY1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_kEYsQo1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_kEYsQ41mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_kEYsRI1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_kEZTUI1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_kEZTUY1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_kEZTUo1mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_kEZTU41mEeqhUNeKJfLXDg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_kESloI1mEeqhUNeKJfLXDg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_kESloY1mEeqhUNeKJfLXDg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_kEgoEI1mEeqhUNeKJfLXDg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_kJoYoI1mEeqhUNeKJfLXDg" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_kJo_sY1mEeqhUNeKJfLXDg" name="KeyListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_kFEBsI1mEeqhUNeKJfLXDg" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_kKBaMI1mEeqhUNeKJfLXDg" name="BufferedImage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJhD4I1mEeqhUNeKJfLXDg" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJkuQI1mEeqhUNeKJfLXDg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJlVUY1mEeqhUNeKJfLXDg" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJl8YY1mEeqhUNeKJfLXDg" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ7TkI1mEeqhUNeKJfLXDg" name="BasicStroke"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ8hsY1mEeqhUNeKJfLXDg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ9IwY1mEeqhUNeKJfLXDg" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ9v0Y1mEeqhUNeKJfLXDg" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ-W4Y1mEeqhUNeKJfLXDg" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ-98Y1mEeqhUNeKJfLXDg" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ_lAY1mEeqhUNeKJfLXDg" name="Rectangle"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_kKAzII1mEeqhUNeKJfLXDg" name="Stroke"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kESloo1mEeqhUNeKJfLXDg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_kJiSAI1mEeqhUNeKJfLXDg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kKCBQI1mEeqhUNeKJfLXDg" name="File"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kEv4oI1mEeqhUNeKJfLXDg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_kJxikI1mEeqhUNeKJfLXDg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJ1M8I1mEeqhUNeKJfLXDg" name="Random"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kKkz0I1mEeqhUNeKJfLXDg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_kKkz0Y1mEeqhUNeKJfLXDg" name="Thread"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kESlo41mEeqhUNeKJfLXDg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_kETMsI1mEeqhUNeKJfLXDg" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_kJi5EY1mEeqhUNeKJfLXDg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kJjgII1mEeqhUNeKJfLXDg" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kKCoUY1mEeqhUNeKJfLXDg" name="JPanel"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kFEBsY1mEeqhUNeKJfLXDg" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_kKCBQo1mEeqhUNeKJfLXDg" name="ImageIO"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kETMsY1mEeqhUNeKJfLXDg" name="control">
      <packagedElement xmi:type="uml:Class" xmi:id="_kFuwEI1mEeqhUNeKJfLXDg" name="Avancer">
        <ownedComment xmi:id="_kLpx4I1mEeqhUNeKJfLXDg">
          <body>This class is the Moving class, it is responsible for creating a new thread that will move 
* our Track and the objects on it.</body>
        </ownedComment>
        <generalization xmi:id="_kKla4I1mEeqhUNeKJfLXDg" general="_kKkz0Y1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK5j9I1mEeqhUNeKJfLXDg" name="P" visibility="package" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kL-iBI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK6LAY1mEeqhUNeKJfLXDg" name="V" visibility="package" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kL_JEY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK6LA41mEeqhUNeKJfLXDg" name="A" visibility="package" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kL_wIY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK6yEY1mEeqhUNeKJfLXDg" name="TPSWAIT" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kK6yEo1mEeqhUNeKJfLXDg" value="100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kK6yE41mEeqhUNeKJfLXDg" name="screenSize" visibility="package" type="_kJkuQI1mEeqhUNeKJfLXDg" association="_kL_wJI1mEeqhUNeKJfLXDg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kK6yFI1mEeqhUNeKJfLXDg" value="Toolkit.getDefaultToolkit().getScreenSize()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kK7ZII1mEeqhUNeKJfLXDg" name="affTimePassed" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLpx4Y1mEeqhUNeKJfLXDg" name="veTimePassed" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLpx5I1mEeqhUNeKJfLXDg" name="cpTimePassed" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLZTMI1mEeqhUNeKJfLXDg" name="Avancer" specification="_kJnKgI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLZTMY1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLZTMo1mEeqhUNeKJfLXDg" name="track" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLZTM41mEeqhUNeKJfLXDg" name="ve" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLZTNI1mEeqhUNeKJfLXDg" type="_kFuwEI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.P = track;
		this.V = ve;
		this.A = a;
		
		//Initializing first time for checkpoint as our thread's starting time.
		this.cpTimePassed = System.currentTimeMillis(); 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLZ6QI1mEeqhUNeKJfLXDg" name="run" specification="_kFwlQI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>System.out.println(&quot;Move Thread Started&quot;);
		
		/**While the vehicle is in flight (i.e not dead) :*/
		while(V.getFlyStatus()) {
			/**Pausing thread each time for synchronization.*/
			try {
				Thread.sleep(TPSWAIT) ;
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
	        
			/**Getting the center of the player's vehicle.*/
			Point coordV = V.getCenter();
			
			/**If the vehicle is not too far above the track and not on the sides of the track :*/
			if (coordV.y > screenSize.height/2 &amp;&amp; coordV.y &lt; screenSize.height - V.getHitHeight()/3 &amp;&amp;
				coordV.x > P.getTrackL().get(1).x &amp;&amp; coordV.x &lt; P.getTrackR().get(1).x) {
				/**Increase track's velocity .*/
				P.speedUp();
			}
			else {
				/**Decrease track's velocity.*/
				P.speedDown();
				/**Plus if the speed is at minimum then making the vehicle slowly go down.*/
				if (P.getSpeed() == 10) V.move(&quot;DOWN&quot;, 2);;
			}
			
			/**Check if the checkpoint was passed. 
			 *Checking with boundaries not exact value or else will not work.*/
			if(P.getDist()%5000 >= 0 &amp;&amp; P.getDist()%5000 &lt;= 25) {
				/**Setting checpoint's passage time.*/
				cpTimePassed = System.currentTimeMillis();
				/**Adding time to our ship's timer.*/
				V.addTime(25);
			}
			
			/**Calculating total time.*/
	        affTimePassed = System.currentTimeMillis()-A.getStarttime();
	        
	        /**Calculating time since checkpoint was passed.*/
	        veTimePassed = System.currentTimeMillis()-cpTimePassed;
	        
	        /**Setting view's seconds (which will then be converted to minutes)*/
	        A.setSecPassed(affTimePassed/1000);	
	        /**Decreasing ship's timer.*/
	        V.timeDecrease(veTimePassed/1000);
	        
	        /**Moving the track.*/
			P.moveTrack();
			/**Checking for collisions between vehicle and obstacles on track.*/
			P.checkObst(V);
			/**Repainting our view.*/
			A.change();
		}
		
		/**If the vehicle is not alive anymore showing information dialog to the player.*/
		JOptionPane.showMessageDialog(null, 
				&quot;GAME OVER \n&quot; +
				&quot;Space to retry \n&quot; +
				&quot;Escape to quit&quot;
			 );
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kFwlQI1mEeqhUNeKJfLXDg" name="run" method="_kLZ6QI1mEeqhUNeKJfLXDg"/>
        <ownedOperation xmi:id="_kJnKgI1mEeqhUNeKJfLXDg" name="Avancer" method="_kLZTMI1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kJnKhI1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJnKhY1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kJnKgY1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJnKgo1mEeqhUNeKJfLXDg" name="track" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJnKg41mEeqhUNeKJfLXDg" name="ve" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJnKho1mEeqhUNeKJfLXDg" type="_kFuwEI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kFzokI1mEeqhUNeKJfLXDg" name="ControlClavier">
        <ownedComment xmi:id="_kLqY8Y1mEeqhUNeKJfLXDg">
          <body>This class is the Keyboard Listener class, it is responsible for User/Program intercation.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kK8AMI1mEeqhUNeKJfLXDg" name="A" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMAXMY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK8AMo1mEeqhUNeKJfLXDg" name="V" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kMA-QY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK8nQY1mEeqhUNeKJfLXDg" name="P" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMA-RI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK9OUI1mEeqhUNeKJfLXDg" name="Fly" visibility="private" type="_kF8LcI1mEeqhUNeKJfLXDg" association="_kMBlUY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK9OUo1mEeqhUNeKJfLXDg" name="Advance" visibility="private" type="_kFuwEI1mEeqhUNeKJfLXDg" association="_kMBlVI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK9OVI1mEeqhUNeKJfLXDg" name="Eff" visibility="private" type="_kF5III1mEeqhUNeKJfLXDg" association="_kMCMYY1mEeqhUNeKJfLXDg"/>
        <interfaceRealization xmi:id="_kKmB8I1mEeqhUNeKJfLXDg" client="_kFzokI1mEeqhUNeKJfLXDg" supplier="_kJo_sY1mEeqhUNeKJfLXDg" contract="_kJo_sY1mEeqhUNeKJfLXDg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLZ6QY1mEeqhUNeKJfLXDg" name="ControlClavier" specification="_kJqN0I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLZ6Qo1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLZ6Q41mEeqhUNeKJfLXDg" name="v" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLZ6RI1mEeqhUNeKJfLXDg" name="p" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLZ6RY1mEeqhUNeKJfLXDg" type="_kFzokI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.A = a;
		this.V = v;
		this.P = p;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLZ6Ro1mEeqhUNeKJfLXDg" name="startGame" specification="_kKmpAI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLZ6R41mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>/**Setting Vehicle to &quot;InFlight&quot; status.*/
		V.startRace();
		
		/**Initializing threads.*/
		Fly = new Voler(A, P, V);
		Advance = new Avancer(A, P, V);
		Eff = new Effects(A, V);
			
		/**Starting said threads.*/
		(Fly).start();
		(Advance).start();
		(Eff).start();

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLahUI1mEeqhUNeKJfLXDg" name="stopGame" specification="_kF1dwI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>/**Setting Vehicle status to &quot;Dead&quot; alike */
		V.stopRace();
		/**Stopping threads.*/
		(Fly).interrupt();
		(Advance).interrupt();
		(Eff).interrupt();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLahUY1mEeqhUNeKJfLXDg" name="keyPressed" specification="_kKn3Io1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLahUo1mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>switch(e.getKeyCode()) {
			case KeyEvent.VK_DOWN :
				/** Going down */
				Fly.update_moveStatus(3);
				break;
				
			case KeyEvent.VK_UP :
				/** Going up */
				Fly.update_moveStatus(2);
				break;
				
			case KeyEvent.VK_LEFT :
				/** Going left */
				Fly.update_moveStatus(0);
				break;
				
			case KeyEvent.VK_RIGHT :
				/** Going right */
				Fly.update_moveStatus(1);
				break;
				
			case KeyEvent.VK_SPACE:
				/** If the game is not yet started : */
				if(!V.getFlyStatus() &amp;&amp; V.getAlive()) {
					/** Starting it. */
					startGame(e);
				
				} 
				/** If the player is Game Over : */
				else if(!V.getAlive()){	
					/** Reinitializing our classes. */
					V.restart();
					P.restart();
					A.restart();
					
					/** Repainting our work canvas. */
					A.change();
			
					/** Restarting game. */
					startGame(e);
				}
				break;
			case KeyEvent.VK_H:
				/** Hide/Show Hitboxes. */
				A.showHitbox();
				break;
			case KeyEvent.VK_ESCAPE:
				/** Stopping the processus. */
				System.exit(0);
				break;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLahU41mEeqhUNeKJfLXDg" name="keyReleased" specification="_kKpFQo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLahVI1mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>Fly.update_moveStatus(4);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kF1dwI1mEeqhUNeKJfLXDg" name="stopGame" method="_kLahUI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLqY9I1mEeqhUNeKJfLXDg">
            <body>void stopGame function that interrupts any running threads each time a game ends.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kJqN0I1mEeqhUNeKJfLXDg" name="ControlClavier" method="_kLZ6QY1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kJq04Y1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJq04o1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLqY8o1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - CONSTRUCTOR -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJqN0Y1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJqN0o1mEeqhUNeKJfLXDg" name="v" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJq04I1mEeqhUNeKJfLXDg" name="p" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJq0441mEeqhUNeKJfLXDg" type="_kFzokI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKmpAI1mEeqhUNeKJfLXDg" name="startGame" method="_kLZ6Ro1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLqY841mEeqhUNeKJfLXDg">
            <body>void startGame function that creates the necessary threads each time a new game starts.</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKmpAY1mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKnQEI1mEeqhUNeKJfLXDg" name="keyTyped">
          <ownedParameter xmi:id="_kKnQEY1mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKn3Io1mEeqhUNeKJfLXDg" name="keyPressed" method="_kLahUY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kKn3I41mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKpFQo1mEeqhUNeKJfLXDg" name="keyReleased" method="_kLahU41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kKpFQ41mEeqhUNeKJfLXDg" name="e" type="_kJoYoI1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kF5III1mEeqhUNeKJfLXDg" name="Effects">
        <ownedComment xmi:id="_kLqY9Y1mEeqhUNeKJfLXDg">
          <body>This class is the Effects class, it is responsible creating a thread to animate effects on screen.</body>
        </ownedComment>
        <generalization xmi:id="_kKqTYI1mEeqhUNeKJfLXDg" general="_kKkz0Y1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK91YY1mEeqhUNeKJfLXDg" name="A" visibility="private" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMCzcI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK91Y41mEeqhUNeKJfLXDg" name="V" visibility="private" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kMCzc41mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK-ccY1mEeqhUNeKJfLXDg" name="TPSWAIT" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kK-cco1mEeqhUNeKJfLXDg" value="80"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLahVY1mEeqhUNeKJfLXDg" name="Effects" specification="_kJsqEI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLahVo1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLahV41mEeqhUNeKJfLXDg" name="ve" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLahWI1mEeqhUNeKJfLXDg" type="_kF5III1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.A = a;
		this.V = ve;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLbIYI1mEeqhUNeKJfLXDg" name="run" specification="_kF6WQI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>System.out.println(&quot;Effects Thread Started&quot;);
		/**If the vehicle is flying : */
		if(V.getFlyStatus()) {
			/**While it's on : */
			while(V.getFlyStatus()) {
				/** Change the images for the green bolt under the space ship. */
				A.incrView();
				try {
					Thread.sleep(TPSWAIT) ;
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kF6WQI1mEeqhUNeKJfLXDg" name="run" method="_kLbIYI1mEeqhUNeKJfLXDg"/>
        <ownedOperation xmi:id="_kJsqEI1mEeqhUNeKJfLXDg" name="Effects" method="_kLahVY1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kJtRII1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJtRIY1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLqY9o1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - CONSTRUCTOR -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJsqEY1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJsqEo1mEeqhUNeKJfLXDg" name="ve" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJtRIo1mEeqhUNeKJfLXDg" type="_kF5III1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kF8LcI1mEeqhUNeKJfLXDg" name="Voler">
        <ownedComment xmi:id="_kLrAAI1mEeqhUNeKJfLXDg">
          <body>This class is the Flying class, it is responsible creating a thread to control the behavior
* of the player's ship in flight.</body>
        </ownedComment>
        <generalization xmi:id="_kKrhgI1mEeqhUNeKJfLXDg" general="_kKkz0Y1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK-cc41mEeqhUNeKJfLXDg" name="V" visibility="private" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kMDagY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK_DgI1mEeqhUNeKJfLXDg" name="P" visibility="private" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMDahI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK_Dgo1mEeqhUNeKJfLXDg" name="A" visibility="private" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMEBkY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kK_DhI1mEeqhUNeKJfLXDg" name="TPSWAIT" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kK_DhY1mEeqhUNeKJfLXDg" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kK_qkI1mEeqhUNeKJfLXDg" name="leftCoef" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLA4sY1mEeqhUNeKJfLXDg" name="mvStat" visibility="private" type="_kF8ygI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLrAAY1mEeqhUNeKJfLXDg" name="rightCoef" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLrABI1mEeqhUNeKJfLXDg" name="upCoef" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLrnEI1mEeqhUNeKJfLXDg" name="downCoef" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLbvcI1mEeqhUNeKJfLXDg" name="Voler" specification="_kJvtYI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLbvcY1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLbvco1mEeqhUNeKJfLXDg" name="track" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLbvc41mEeqhUNeKJfLXDg" name="ve" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLbvdI1mEeqhUNeKJfLXDg" type="_kF8LcI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>/** 20 seemed like a good choice. */
		this.leftCoef = 20; 
		this.rightCoef = 20;
		this.upCoef = 20;
		this.downCoef = 20;
		
		this.V = ve;
		this.A = a;
		this.P = track; 
		
		/** The vehicle is in neutral state when not turning or going up/down. */
		this.mvStat = moveStatus.NEUTRAL;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLbvdY1mEeqhUNeKJfLXDg" name="run" specification="_kGAc4I1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>System.out.println(&quot;Fly Thread Started&quot;);
		/** If the vehicle is flying : */
		if(V.getFlyStatus()) {
			/** While it's on : */
			while(V.getFlyStatus()) {
				switch (mvStat) {
					/** Moving our track, vehicle and background according to the direction. */
					case LEFT:
						V.move(&quot;LEFT&quot;, leftCoef);
						P.trackEffect(&quot;LEFT&quot;, leftCoef);
						A.set_bg_parallax(&quot;LEFT&quot;);
						break;
					case RIGHT:
						V.move(&quot;RIGHT&quot;, rightCoef);
						P.trackEffect(&quot;RIGHT&quot;, rightCoef);
						A.set_bg_parallax(&quot;RIGHT&quot;);
						break;
					case UP:
						V.move(&quot;UP&quot;, upCoef);
						P.trackEffect(&quot;UP&quot;, upCoef);
						break;
					case DOWN:
						V.move(&quot;DOWN&quot;, downCoef);
						P.trackEffect(&quot;DOWN&quot;, downCoef);
						break;
					case NEUTRAL:
						V.move(&quot;NEUTRAL&quot;, 0);
						break;
				}
				/**Refreshing view and putting thread to sleep for 50 ms to see updates on our screen.*/
				A.change();
				try { Thread.sleep(TPSWAIT); }
				catch (Exception exc) { exc.printStackTrace(); }
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLbvdo1mEeqhUNeKJfLXDg" name="getMoveStatus" specification="_kGBD841mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLbvd41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;&quot;+mvStat+&quot;&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLbveI1mEeqhUNeKJfLXDg" name="update_moveStatus" specification="_kGBrAY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLbveY1mEeqhUNeKJfLXDg" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(V.getFlyStatus() &amp;&amp; V.getAlive()) {
			mvStat = moveStatus.getVal(index);
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGAc4I1mEeqhUNeKJfLXDg" name="run" method="_kLbvdY1mEeqhUNeKJfLXDg"/>
        <ownedOperation xmi:id="_kGBD841mEeqhUNeKJfLXDg" name="getMoveStatus" method="_kLbvdo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLrnFY1mEeqhUNeKJfLXDg">
            <body>Function to String get the moveStatus 
	 * @return our moveStatus in a String form</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGBrAI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGBrAY1mEeqhUNeKJfLXDg" name="update_moveStatus" method="_kLbveI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLrnFo1mEeqhUNeKJfLXDg">
            <body>Function to update our move status given an index.
	 * @param index an integer.</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGCSEI1mEeqhUNeKJfLXDg" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJvtYI1mEeqhUNeKJfLXDg" name="Voler" method="_kLbvcI1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kJvtZI1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJvtZY1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLrnFI1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - CONSTRUCTOR -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJvtYY1mEeqhUNeKJfLXDg" name="a" type="_kGpWEI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJvtYo1mEeqhUNeKJfLXDg" name="track" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJvtY41mEeqhUNeKJfLXDg" name="ve" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJvtZo1mEeqhUNeKJfLXDg" type="_kF8LcI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_kF8ygI1mEeqhUNeKJfLXDg" name="moveStatus" visibility="protected">
          <ownedAttribute xmi:id="_kLARoI1mEeqhUNeKJfLXDg" name="list" visibility="private" isStatic="true" type="_kF8ygI1mEeqhUNeKJfLXDg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kLARoY1mEeqhUNeKJfLXDg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLARo41mEeqhUNeKJfLXDg" value="moveStatus.values()"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_kF-nsI1mEeqhUNeKJfLXDg" name="getVal" isStatic="true" method="_kLbIYY1mEeqhUNeKJfLXDg">
            <ownedComment xmi:id="_kLrnE41mEeqhUNeKJfLXDg">
              <body>A function to return the value through an integer index. 
		 * @param int the index.
		 * @return list[i] the wanted value.
		 *</body>
            </ownedComment>
            <ownedParameter xmi:id="_kF-nsY1mEeqhUNeKJfLXDg" name="i">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_kJvGUI1mEeqhUNeKJfLXDg" type="_kF8ygI1mEeqhUNeKJfLXDg" direction="return"/>
          </ownedOperation>
          <ownedLiteral xmi:id="_kF9ZkI1mEeqhUNeKJfLXDg" name="LEFT"/>
          <ownedLiteral xmi:id="_kF9ZkY1mEeqhUNeKJfLXDg" name="RIGHT"/>
          <ownedLiteral xmi:id="_kF9Zko1mEeqhUNeKJfLXDg" name="UP"/>
          <ownedLiteral xmi:id="_kF9Zk41mEeqhUNeKJfLXDg" name="DOWN"/>
          <ownedLiteral xmi:id="_kF9ZlI1mEeqhUNeKJfLXDg" name="NEUTRAL"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kL-iBI1mEeqhUNeKJfLXDg" name="" memberEnd="_kL-iBY1mEeqhUNeKJfLXDg _kK5j9I1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kL-iBY1mEeqhUNeKJfLXDg" name="" type="_kFuwEI1mEeqhUNeKJfLXDg" association="_kL-iBI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kL_JEY1mEeqhUNeKJfLXDg" name="" memberEnd="_kL_JEo1mEeqhUNeKJfLXDg _kK6LAY1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kL_JEo1mEeqhUNeKJfLXDg" name="" type="_kFuwEI1mEeqhUNeKJfLXDg" association="_kL_JEY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kL_wIY1mEeqhUNeKJfLXDg" name="" memberEnd="_kL_wIo1mEeqhUNeKJfLXDg _kK6LA41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kL_wIo1mEeqhUNeKJfLXDg" name="" type="_kFuwEI1mEeqhUNeKJfLXDg" association="_kL_wIY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kL_wJI1mEeqhUNeKJfLXDg" name="" memberEnd="_kL_wJY1mEeqhUNeKJfLXDg _kK6yE41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kL_wJY1mEeqhUNeKJfLXDg" name="" type="_kFuwEI1mEeqhUNeKJfLXDg" association="_kL_wJI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMAXMY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMAXMo1mEeqhUNeKJfLXDg _kK8AMI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMAXMo1mEeqhUNeKJfLXDg" name="" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kMAXMY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMA-QY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMA-Qo1mEeqhUNeKJfLXDg _kK8AMo1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMA-Qo1mEeqhUNeKJfLXDg" name="" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kMA-QY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMA-RI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMA-RY1mEeqhUNeKJfLXDg _kK8nQY1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMA-RY1mEeqhUNeKJfLXDg" name="" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kMA-RI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMBlUY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMBlUo1mEeqhUNeKJfLXDg _kK9OUI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMBlUo1mEeqhUNeKJfLXDg" name="" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kMBlUY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMBlVI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMBlVY1mEeqhUNeKJfLXDg _kK9OUo1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMBlVY1mEeqhUNeKJfLXDg" name="" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kMBlVI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMCMYY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMCMYo1mEeqhUNeKJfLXDg _kK9OVI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMCMYo1mEeqhUNeKJfLXDg" name="" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kMCMYY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMCzcI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMCzcY1mEeqhUNeKJfLXDg _kK91YY1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMCzcY1mEeqhUNeKJfLXDg" name="" type="_kF5III1mEeqhUNeKJfLXDg" association="_kMCzcI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMCzc41mEeqhUNeKJfLXDg" name="" memberEnd="_kMCzdI1mEeqhUNeKJfLXDg _kK91Y41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMCzdI1mEeqhUNeKJfLXDg" name="" type="_kF5III1mEeqhUNeKJfLXDg" association="_kMCzc41mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMDagY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMDago1mEeqhUNeKJfLXDg _kK-cc41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMDago1mEeqhUNeKJfLXDg" name="" type="_kF8LcI1mEeqhUNeKJfLXDg" association="_kMDagY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMDahI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMDahY1mEeqhUNeKJfLXDg _kK_DgI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMDahY1mEeqhUNeKJfLXDg" name="" type="_kF8LcI1mEeqhUNeKJfLXDg" association="_kMDahI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMEBkY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMEBko1mEeqhUNeKJfLXDg _kK_Dgo1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMEBko1mEeqhUNeKJfLXDg" name="" type="_kF8LcI1mEeqhUNeKJfLXDg" association="_kMEBkY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kETMso1mEeqhUNeKJfLXDg" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_kGFVYI1mEeqhUNeKJfLXDg" name="CheckPoint">
        <ownedComment xmi:id="_kLrnF41mEeqhUNeKJfLXDg">
          <body>This class is the CheckPoint class, it defines the object we commonly call a checkPoint in game.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kLBfwI1mEeqhUNeKJfLXDg" name="height" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLsOII1mEeqhUNeKJfLXDg" name="dist">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLcWgo1mEeqhUNeKJfLXDg" name="CheckPoint" specification="_kGF8cI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLcWg41mEeqhUNeKJfLXDg" name="hor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLcWhI1mEeqhUNeKJfLXDg" name="dist">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLcWhY1mEeqhUNeKJfLXDg" type="_kGFVYI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.height = hor;
		this.dist =  dist;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLcWho1mEeqhUNeKJfLXDg" name="decreaseHeight" specification="_kGHKkI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLcWh41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>height += n;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLc9kI1mEeqhUNeKJfLXDg" name="getDist" specification="_kGHKko1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLc9kY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return dist;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGF8cI1mEeqhUNeKJfLXDg" name="CheckPoint" method="_kLcWgo1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kGGjgI1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kGGjgY1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLsOI41mEeqhUNeKJfLXDg">
            <body>Constructor of the CheckPoint class
	 * @param hor the horizon height
	 * @param tta the time to add to the timer
	 * @param dist the distance of the checkpoint
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGF8cY1mEeqhUNeKJfLXDg" name="hor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGF8co1mEeqhUNeKJfLXDg" name="dist">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGGjgo1mEeqhUNeKJfLXDg" type="_kGFVYI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGHKkI1mEeqhUNeKJfLXDg" name="decreaseHeight" method="_kLcWho1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLsOJI1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - FUNCTIONS -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGHKkY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGHKko1mEeqhUNeKJfLXDg" name="getDist" method="_kLc9kI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLsOJY1mEeqhUNeKJfLXDg">
            <body>Gives the distances of the checkpoint
	 * @return an int, the distance
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGHKk41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kGHxoI1mEeqhUNeKJfLXDg" name="CheckPointList">
        <ownedComment xmi:id="_kLsOJo1mEeqhUNeKJfLXDg">
          <body>This class is the CheckPointList class, it regroup our CheckPoints .</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kLCt4Y1mEeqhUNeKJfLXDg" name="cpList" type="_kJxikI1mEeqhUNeKJfLXDg" isReadOnly="true" association="_kMEooY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLDU8Y1mEeqhUNeKJfLXDg" name="horHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLc9ko1mEeqhUNeKJfLXDg" name="CheckPointList" specification="_kGIYsI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLc9k41mEeqhUNeKJfLXDg" name="horY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLc9lI1mEeqhUNeKJfLXDg" type="_kGHxoI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.cpList = new ArrayList&lt;CheckPoint>();&#xD;
		this.horHeight = horY;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLc9lY1mEeqhUNeKJfLXDg" name="addCP" specification="_kGI_xI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLc9lo1mEeqhUNeKJfLXDg" name="dist">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>cpList.add(new CheckPoint(horHeight, dist));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLc9l41mEeqhUNeKJfLXDg" name="moveCP" specification="_kGJm0I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLc9mI1mEeqhUNeKJfLXDg" name="moveVal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLc9mY1mEeqhUNeKJfLXDg" name="maxY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>/**The checkpoints move and we remove it if needed.*/&#xD;
		for(int i=0; i&lt;cpList.size(); i++) {&#xD;
			CheckPoint cp = cpList.get(i);&#xD;
			cp.decreaseHeight(moveVal);&#xD;
			if(cp.getHeight()>maxY) {&#xD;
				cpList.remove(cp);&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGIYsI1mEeqhUNeKJfLXDg" name="CheckPointList" method="_kLc9ko1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kGI_wY1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kGI_wo1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLsOJ41mEeqhUNeKJfLXDg">
            <body>Constructor of the CheckPointList class&#xD;
	 * @param horY the height of the horizon&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGI_wI1mEeqhUNeKJfLXDg" name="horY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGI_w41mEeqhUNeKJfLXDg" type="_kGHxoI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGI_xI1mEeqhUNeKJfLXDg" name="addCP" method="_kLc9lY1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLsOKI1mEeqhUNeKJfLXDg">
            <body>Adds a new checkPoint, at the horizon, to the list&#xD;
	 * @param dist the distance of the CheckPoint&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGI_xY1mEeqhUNeKJfLXDg" name="dist">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGJm0I1mEeqhUNeKJfLXDg" name="moveCP" method="_kLc9l41mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLsOKY1mEeqhUNeKJfLXDg">
            <body>Moves the checkPoint :&#xD;
	 * Lowers the visible height of every checkpoint by a given value and removes checkpoints that go too low&#xD;
	 * @param moveVal, an integer. The height of every checkpoint decreases by it.&#xD;
	 * @param maxY an integer. If a checkpoint's height is higher (ad it seems lower on the screen), the checkpoint is removed&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGJm0Y1mEeqhUNeKJfLXDg" name="moveVal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGJm0o1mEeqhUNeKJfLXDg" name="maxY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kGKN4I1mEeqhUNeKJfLXDg" name="Obstacle">
        <ownedAttribute xmi:id="_kLD8AI1mEeqhUNeKJfLXDg" name="x" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLD8AY1mEeqhUNeKJfLXDg" name="y">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLD8Ao1mEeqhUNeKJfLXDg" name="w" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLD8BI1mEeqhUNeKJfLXDg" name="h" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLEjEY1mEeqhUNeKJfLXDg" name="z" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLEjE41mEeqhUNeKJfLXDg" name="d">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLdkoI1mEeqhUNeKJfLXDg" name="Obstacle" specification="_kGMqII1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLdkoY1mEeqhUNeKJfLXDg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLdkoo1mEeqhUNeKJfLXDg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLdko41mEeqhUNeKJfLXDg" type="_kGKN4I1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.z = 100;&#xD;
		this.d = 0; &#xD;

		this.w = 20;&#xD;
		this.h = 60;
		&#xD;
		this.x = x;&#xD;
		this.y = y-this.h;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLdkpI1mEeqhUNeKJfLXDg" name="getW" specification="_kGMqJo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLdkpY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return w;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLdkpo1mEeqhUNeKJfLXDg" name="getH" specification="_kGNRMY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLdkp41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return h;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLdkqI1mEeqhUNeKJfLXDg" name="setX" specification="_kGNRM41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLdkqY1mEeqhUNeKJfLXDg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.x = x;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLdkqo1mEeqhUNeKJfLXDg" name="setW" specification="_kGN4QI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLdkq41mEeqhUNeKJfLXDg" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.w = w;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeLsI1mEeqhUNeKJfLXDg" name="setH" specification="_kGN4Qo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeLsY1mEeqhUNeKJfLXDg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.h = h;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeLso1mEeqhUNeKJfLXDg" name="decreaseHeight" specification="_kGOfUY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeLs41mEeqhUNeKJfLXDg" name="moveVal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>y += moveVal;&#xD;
		this.d += moveVal;&#xD;
		&#xD;
		if(!(this.h>200) &amp;&amp; !(this.w>200)) {&#xD;
			&#xD;
			this.y -= 1;&#xD;
			this.h += 1;&#xD;
			this.x -= 1;&#xD;
			this.w += 1;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeLtI1mEeqhUNeKJfLXDg" name="vMoveLeft" specification="_kGOfU41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeLtY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.x+=n;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeLto1mEeqhUNeKJfLXDg" name="vMoveRight" specification="_kGPGYI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeLt41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.x-=n;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeLuI1mEeqhUNeKJfLXDg" name="vMoveUp" specification="_kGPGYo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeLuY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.y+=n/2;&#xD;
		this.x += n/2;&#xD;
&#xD;
		if(!(this.h&lt;15) &amp;&amp; !(this.w&lt;15)) {&#xD;
			this.h-=n/2;&#xD;
			this.w-=n;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeywI1mEeqhUNeKJfLXDg" name="vMoveDown" specification="_kGPtcI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeywY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.y-=n/2;&#xD;
		this.x -= n/2;&#xD;
&#xD;
		this.h+=n/2;&#xD;
		this.w+=n;&#xD;
		&#xD;
		if(this.h>200 || this.w>200) {&#xD;
			this.h-=n/2;&#xD;
			this.w-=n;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeywo1mEeqhUNeKJfLXDg" name="vMoveUp" specification="_kGPtco1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeyw41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLeyxI1mEeqhUNeKJfLXDg" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLeyxY1mEeqhUNeKJfLXDg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.y+=n/2;&#xD;
		this.x += n/2;&#xD;
&#xD;
		this.h = h;&#xD;
		this.w = w;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeyxo1mEeqhUNeKJfLXDg" name="vMoveDown" specification="_kGQUg41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeyx41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLeyyI1mEeqhUNeKJfLXDg" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLeyyY1mEeqhUNeKJfLXDg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.y-=n/2;&#xD;
		this.x -= n/2;&#xD;
		&#xD;
		this.h += h;&#xD;
		this.w += w;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeyyo1mEeqhUNeKJfLXDg" name="hitV" specification="_kJzXwI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeyy41mEeqhUNeKJfLXDg" name="V" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLeyzI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>/**If the obstacle is too far away from the vehicle, we know they cannot touch each other.*/&#xD;
		&#xD;
		if(V.getZ() &lt; this.d-this.z/2 || V.getZ() > this.d+this.z/2) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		int maxG = Math.max(this.x, V.getCoord().x);&#xD;
		int minD = Math.min(this.x + this.w, V.getCoord().x + V.getHitWidth());&#xD;
		int minH = Math.min(this.y + this.h, V.getCoord().y + V.getHitHeight());&#xD;
		int maxB = Math.max(this.y, V.getCoord().y);&#xD;
		&#xD;
		if(maxG&lt;minD &amp;&amp; maxB&lt;minH) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLeyzY1mEeqhUNeKJfLXDg" name="hitObs" specification="_kJz-0o1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLeyzo1mEeqhUNeKJfLXDg" name="obs" type="_kGKN4I1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLeyz41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(obs.getD() &lt; this.d-this.z/2 || obs.getD() > this.d+this.z/2) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		int maxG = Math.max(this.x, obs.getX());&#xD;
		int minD = Math.min(this.x + this.w, obs.getX() + obs.getW());&#xD;
		int minH = Math.min(this.y + this.h, obs.getY() + obs.getH());&#xD;
		int maxB = Math.max(this.y, obs.getY());&#xD;
		&#xD;
		if(maxG&lt;minD &amp;&amp; maxB&lt;minH) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGMqII1mEeqhUNeKJfLXDg" name="Obstacle" method="_kLdkoI1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kGMqI41mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kGMqJI1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLsOKo1mEeqhUNeKJfLXDg">
            <body>Constructor of the Obstacle class&#xD;
	 * @param x the abscissa at the higher left corner of the obstacle&#xD;
	 * @param y the ordinate at the higher left corner of the obstacle&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGMqIY1mEeqhUNeKJfLXDg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGMqIo1mEeqhUNeKJfLXDg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGMqJY1mEeqhUNeKJfLXDg" type="_kGKN4I1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGMqJo1mEeqhUNeKJfLXDg" name="getW" method="_kLdkpI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLsOK41mEeqhUNeKJfLXDg">
            <body>Gives the width of the obstacle&#xD;
	 * @return an integer, the width&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGNRMI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGNRMY1mEeqhUNeKJfLXDg" name="getH" method="_kLdkpo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1MI1mEeqhUNeKJfLXDg">
            <body>Gives the height of the obstacle&#xD;
	 * @return an integer, the height&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGNRMo1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGNRM41mEeqhUNeKJfLXDg" name="setX" method="_kLdkqI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1MY1mEeqhUNeKJfLXDg">
            <body>Sets the abscissa at the higher left corner of the obstacle&#xD;
	 * @param x the abscissa&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGNRNI1mEeqhUNeKJfLXDg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGN4QI1mEeqhUNeKJfLXDg" name="setW" method="_kLdkqo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1Mo1mEeqhUNeKJfLXDg">
            <body>Sets the width of the obstacle&#xD;
	 * @param w the width&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGN4QY1mEeqhUNeKJfLXDg" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGN4Qo1mEeqhUNeKJfLXDg" name="setH" method="_kLeLsI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1M41mEeqhUNeKJfLXDg">
            <body>Sets the height of the obstacle&#xD;
	 * @param h the height&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGOfUI1mEeqhUNeKJfLXDg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGOfUY1mEeqhUNeKJfLXDg" name="decreaseHeight" method="_kLeLso1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1NI1mEeqhUNeKJfLXDg">
            <body>Moves the obstacle to the bottom from a given value &#xD;
	 * @param moveVal the value that we want to move the obstacle&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGOfUo1mEeqhUNeKJfLXDg" name="moveVal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGOfU41mEeqhUNeKJfLXDg" name="vMoveLeft" method="_kLeLtI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1NY1mEeqhUNeKJfLXDg">
            <body>Moves the obstacle to the left from a given value&#xD;
	 * @param n the value that we want to move the obstacle&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGOfVI1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGPGYI1mEeqhUNeKJfLXDg" name="vMoveRight" method="_kLeLto1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1No1mEeqhUNeKJfLXDg">
            <body>Moves the obstacle to the right from a given value&#xD;
	 * @param n the value that we want to move the obstacle&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGPGYY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGPGYo1mEeqhUNeKJfLXDg" name="vMoveUp" method="_kLeLuI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1N41mEeqhUNeKJfLXDg">
            <body>Moves the obstacle up from a given value&#xD;
	 * @param n the value that we want to move the obstacle&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGPGY41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGPtcI1mEeqhUNeKJfLXDg" name="vMoveDown" method="_kLeywI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1OI1mEeqhUNeKJfLXDg">
            <body>Moves down the obstacle from a given value&#xD;
	 * @param n the value that we want to move the obstacle&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGPtcY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGPtco1mEeqhUNeKJfLXDg" name="vMoveUp" method="_kLeywo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1OY1mEeqhUNeKJfLXDg">
            <body>Zooms out the obstacle to represent the vehicle going higher by reducing the height and width of the obstacle&#xD;
	 * @param n the value that we want to move the obstacle&#xD;
	 * @param w the width we remove&#xD;
	 * @param h the height we remove&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGQUgI1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGQUgY1mEeqhUNeKJfLXDg" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGQUgo1mEeqhUNeKJfLXDg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGQUg41mEeqhUNeKJfLXDg" name="vMoveDown" method="_kLeyxo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1Oo1mEeqhUNeKJfLXDg">
            <body>Zooms in the obstacle to represent the vehicle going lower by increasing the height and width of the obstacle&#xD;
	 * @param n the value that we want to move the obstacle&#xD;
	 * @param w the width we add&#xD;
	 * @param h the height we add&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGQUhI1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGQUhY1mEeqhUNeKJfLXDg" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGQUho1mEeqhUNeKJfLXDg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJzXwI1mEeqhUNeKJfLXDg" name="hitV" method="_kLeyyo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1O41mEeqhUNeKJfLXDg">
            <body>Tests if the obstacle is hitting a given vehicle&#xD;
	 * @param V the vehicle&#xD;
	 * @return true if the vehicle is hitting the obstacle, false otherwise&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJz-0I1mEeqhUNeKJfLXDg" name="V" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJz-0Y1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJz-0o1mEeqhUNeKJfLXDg" name="hitObs" method="_kLeyzY1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1PI1mEeqhUNeKJfLXDg">
            <body>Tests if the obstacle is hitting an other obstacle&#xD;
	 * @param obs the other obstacle&#xD;
	 * @return true if the obstacle is hitting the other obstacle, false otherwise&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJz-041mEeqhUNeKJfLXDg" name="obs" type="_kGKN4I1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJz-1I1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kGTX0I1mEeqhUNeKJfLXDg" name="Opponent">
        <ownedComment xmi:id="_kLs1PY1mEeqhUNeKJfLXDg">
          <body>This class is the Opponent class, it defines our adversaries.</body>
        </ownedComment>
        <generalization xmi:id="_kJ10AY1mEeqhUNeKJfLXDg" general="_kGKN4I1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLFKII1mEeqhUNeKJfLXDg" name="speed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLFKIo1mEeqhUNeKJfLXDg" name="mvVal" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLFxMY1mEeqhUNeKJfLXDg" name="mvStat" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLFxM41mEeqhUNeKJfLXDg" name="screenSize" visibility="package" type="_kJkuQI1mEeqhUNeKJfLXDg" association="_kMEopI1mEeqhUNeKJfLXDg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLFxNI1mEeqhUNeKJfLXDg" value="Toolkit.getDefaultToolkit().getScreenSize()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLfZ0I1mEeqhUNeKJfLXDg" name="Opponent" specification="_kGT-4I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLfZ0Y1mEeqhUNeKJfLXDg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLfZ0o1mEeqhUNeKJfLXDg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLfZ041mEeqhUNeKJfLXDg" type="_kGTX0I1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>super(x, y);&#xD;
		this.w = 75;&#xD;
		this.h = 15;&#xD;
		this.speed = 1;&#xD;
		this.mvVal = 0;&#xD;
		this.mvStat = &quot;NEUTRAL&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLfZ1I1mEeqhUNeKJfLXDg" name="decreaseHeight" specification="_kGUl8Y1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLfZ1Y1mEeqhUNeKJfLXDg" name="moveVal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int y = this.getY() + moveVal*speed;&#xD;
		int d = this.getD() + moveVal*speed;&#xD;
		&#xD;
		/** The obstacle gets bigger. */&#xD;
		y -=2*speed;&#xD;
		int h = this.getH() + 2*speed;&#xD;
		int x = this.getX() - 2*speed;&#xD;
		int w = this.getW() + 2*speed;&#xD;
&#xD;
		this.setD(d);&#xD;
		this.setX(x);&#xD;
		this.setY(y);&#xD;
		this.setW(w);&#xD;
		this.setH(h);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLfZ1o1mEeqhUNeKJfLXDg" name="move" specification="_kGVNAo1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>Random ran = new Random();&#xD;
		&#xD;
		/** The opponent changes the way they move. */&#xD;
		int n = ran.nextInt(100);&#xD;
		if(n&lt;=1) {&#xD;
			int mv = ran.nextInt(5);&#xD;
			&#xD;
			if(mv&lt;1) {&#xD;
				this.mvStat = &quot;LEFT&quot;;&#xD;
			}else if(mv&lt;2) {&#xD;
				this.mvStat = &quot;RIGHT&quot;;&#xD;
			}else if(mv&lt;3) {&#xD;
				this.mvStat = &quot;UP&quot;;&#xD;
			}else if(mv&lt;4) {&#xD;
				this.mvStat = &quot;DOWN&quot;;&#xD;
			}else if(mv&lt;5) {&#xD;
				this.mvStat = &quot;NEUTRAL&quot;;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		n = ran.nextInt(100);&#xD;
		if(n&lt;=5) {&#xD;
			this.mvVal = ran.nextInt(3)*10;&#xD;
		}&#xD;
		&#xD;
		n = ran.nextInt(100);&#xD;
		if(n&lt;=5) {&#xD;
			int s = ran.nextInt(20);&#xD;
			this.speed = (110-s)/100;&#xD;
		}&#xD;
		&#xD;
		/** The opponent moves according to it's movement state. */&#xD;
		switch (mvStat) {&#xD;
			case &quot;LEFT&quot;:&#xD;
				if(this.getX()  &lt;= this.getW()) {&#xD;
					this.setX(this.getW());&#xD;
					break;&#xD;
				} &#xD;
				this.setX(this.getX()-mvVal);&#xD;
				break;&#xD;
			case &quot;RIGHT&quot;:&#xD;
				if(this.getX()  >= screenSize.width - 2*this.getW()) {&#xD;
					this.setX(screenSize.width - 2*this.getW());&#xD;
					break;&#xD;
				}&#xD;
				this.setX(this.getX() + mvVal);&#xD;
&#xD;
				break;&#xD;
			case &quot;UP&quot;:&#xD;
				if(!(this.h&lt;30) &amp;&amp; !(this.w&lt;30)) {&#xD;
					int y = this.getY()-mvVal;&#xD;
					int w = this.getW()-mvVal/5;&#xD;
					int h = this.getH()-mvVal/5;&#xD;
					&#xD;
					this.setY(y);&#xD;
					this.setW(w);&#xD;
					this.setH(h);&#xD;
					this.setD(this.getD()-mvVal);&#xD;
				}&#xD;
				&#xD;
				&#xD;
				break;&#xD;
			case &quot;DOWN&quot;:&#xD;
				if(!(this.h>300) &amp;&amp; !(this.w>300)) {&#xD;
					this.setY(this.getY()+mvVal);&#xD;
					this.setD(this.getD()+mvVal);&#xD;
				}&#xD;
				break;&#xD;
			case &quot;NEUTRAL&quot;: &#xD;
				break;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLfZ141mEeqhUNeKJfLXDg" name="getMoveStatus" specification="_kGV0EI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLfZ2I1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return mvStat;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGT-4I1mEeqhUNeKJfLXDg" name="Opponent" method="_kLfZ0I1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kGT-441mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kGT-5I1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLs1Po1mEeqhUNeKJfLXDg">
            <body>Constructor of the Opponent class&#xD;
	 * @param x the abscissa at the higher left corner of the opponent&#xD;
	 * @param y the ordinate at the higher left corner of the opponent&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGT-4Y1mEeqhUNeKJfLXDg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGT-4o1mEeqhUNeKJfLXDg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGUl8I1mEeqhUNeKJfLXDg" type="_kGTX0I1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGUl8Y1mEeqhUNeKJfLXDg" name="decreaseHeight" method="_kLfZ1I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kGUl8o1mEeqhUNeKJfLXDg" name="moveVal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGVNAo1mEeqhUNeKJfLXDg" name="move" method="_kLfZ1o1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1P41mEeqhUNeKJfLXDg">
            <body>Lets the opponent change the movement of the obstacle randomly&#xD;
	 * Has a chance to change the value of its movement on the plane of the screen, the direction of its movement, and its speed&#xD;
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGV0EI1mEeqhUNeKJfLXDg" name="getMoveStatus" method="_kLfZ141mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLs1QI1mEeqhUNeKJfLXDg">
            <body>Gives the status of the movement : tells if the vehicle is going up, down, left, right or if it doesn't move&#xD;
	 * @return a String, the status of the movement&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGV0EY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kGXCMI1mEeqhUNeKJfLXDg" name="Piste">
        <ownedComment xmi:id="_kLs1QY1mEeqhUNeKJfLXDg">
          <body>This class is the &quot;Track&quot; class, it will be used to create our track, 
* regroup all obstacles and opponents but also set the interaction with checkpoints.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kLGYQY1mEeqhUNeKJfLXDg" name="MOVEVAL" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLGYQo1mEeqhUNeKJfLXDg" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLG_UY1mEeqhUNeKJfLXDg" name="horHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLHmYI1mEeqhUNeKJfLXDg" name="maxX" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLHmY41mEeqhUNeKJfLXDg" name="traveledDist" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLINco1mEeqhUNeKJfLXDg" name="traveledSinceCP" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLINdI1mEeqhUNeKJfLXDg" name="DISTTOCP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLI0gI1mEeqhUNeKJfLXDg" value="5000"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLI0gY1mEeqhUNeKJfLXDg" name="trackL" type="_kJxikI1mEeqhUNeKJfLXDg" isReadOnly="true" association="_kMFPsY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLKCoY1mEeqhUNeKJfLXDg" name="cpList" visibility="private" type="_kGHxoI1mEeqhUNeKJfLXDg" association="_kMF2wY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLKCo41mEeqhUNeKJfLXDg" name="obsList" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMGd0Y1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLKpso1mEeqhUNeKJfLXDg" name="oppList" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMGd1I1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLtcQI1mEeqhUNeKJfLXDg" name="ZOOM" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLtcQ41mEeqhUNeKJfLXDg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLtcRI1mEeqhUNeKJfLXDg" name="trackSize" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLuDUI1mEeqhUNeKJfLXDg" name="maxY" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLuDU41mEeqhUNeKJfLXDg" name="symX" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLuDVo1mEeqhUNeKJfLXDg" name="score" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLuqYo1mEeqhUNeKJfLXDg" name="trackR" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMb1AI1mEeqhUNeKJfLXDg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgA4o1mEeqhUNeKJfLXDg" name="Piste" specification="_kGYQUI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLgA441mEeqhUNeKJfLXDg" type="_kGXCMI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.trackL = new ArrayList&lt;Point>();
		this.trackR= new ArrayList&lt;Point>();

		this.obsList = new ArrayList&lt;Obstacle>();
		this.oppList = new ArrayList&lt;Opponent>();
		
		this.trackSize = 0;
		this.traveledDist = 0;
		this.score = 0;
		
		this.traveledSinceCP = 0;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgA5I1mEeqhUNeKJfLXDg" name="createTrack" specification="_kGYQVI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>cpList = new CheckPointList(horHeight); //Creation de la liste de checkPoint
		
		//Test obstacle
		//obsList.add(new Obstacle(200, horHeight));
		
		int currX = 300;
		int currY = maxY;
		
		trackL.add(new Point(currX, currY));
		trackR.add(new Point(maxX-currX, currY));
		
		trackSize ++;
		
		for(int i = 0; i &lt; 2; i++) { addPoint(); }
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn8I1mEeqhUNeKJfLXDg" name="addPoint" specification="_kGY3YI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>Random ran = new Random();
		
		int prevXL = trackL.get(trackSize-1).x;
		
		int currY = horHeight;
		int currX = 0;
		
		int dir = ran.nextInt(100);
		if (dir > 50 &amp;&amp; (prevXL &lt; maxX - 200 || prevXL &lt;200)) {
			currX = prevXL+50;
		} else if (dir &lt;= 50 &amp;&amp; (prevXL > maxX - 200 || prevXL > 200)){
			currX = prevXL-30;
		}
		
		trackL.add(new Point(currX, currY));
		
		symX = currX + 25;
		
		trackR.add(new Point(symX , currY));
		trackSize ++;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn8Y1mEeqhUNeKJfLXDg" name="speedUp" specification="_kGY3YY1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>if (MOVEVAL &lt; 25) { MOVEVAL += 2;}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn8o1mEeqhUNeKJfLXDg" name="speedDown" specification="_kGY3Yo1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>if(MOVEVAL > 5) { MOVEVAL --; }
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn841mEeqhUNeKJfLXDg" name="moveTrack" specification="_kGY3Y41mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>if ( trackL.get(trackSize - 2).y &lt; maxY) {	
			for(int i = 0; i &lt; trackL.size()-1; i++){
				Point pL = trackL.get(i);
				Point pR = trackR.get(i);
	
				pL.x -= MOVEVAL;
				pL.y += MOVEVAL;
				
				pR.x += MOVEVAL;
				pR.y += MOVEVAL;
			}
		} else {
			addPoint();
			
			trackL.remove(0);
			trackR.remove(0);
			trackSize --;
		}
	
		traveledDist +=  MOVEVAL;
		score = traveledDist;
		traveledSinceCP +=  MOVEVAL;
		
		/** The checkpoints move. */
		cpList.moveCP(MOVEVAL, maxY);
		
		/** We add a checkpoint if we need it.*/
		if(traveledSinceCP >= DISTTOCP) {
			traveledSinceCP = 0;
			cpList.addCP(traveledDist+DISTTOCP);
		}
		
		/** Obstacle */
		this.addRandObst();
		
		/** The obstacles move and we remove it if needed. */
		for(int i=0; i&lt;obsList.size(); i++) {
			Obstacle o = obsList.get(i);
			o.decreaseHeight(MOVEVAL);
			o.h += MOVEVAL;
			o.w += MOVEVAL;
			if(o.getH()>=maxY) { 
				obsList.remove(o);
			}
		}
		for(int i=0; i&lt;oppList.size(); i++) {
			Opponent o = oppList.get(i);
			o.decreaseHeight(MOVEVAL);
			o.move();
			o.h += MOVEVAL/10;
			o.w += MOVEVAL/10;
			if(o.getH()>=maxY) {
				oppList.remove(o);
				//The score gets higher when the vehicle passes an opponent
				this.score += 10;
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn9I1mEeqhUNeKJfLXDg" name="trackEffect" specification="_kGZecI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLgn9Y1mEeqhUNeKJfLXDg" name="mvStat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLgn9o1mEeqhUNeKJfLXDg" name="coef">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Point pL, pR;
		
		for(int i = 0; i &lt; trackSize; i++) {
			pL = trackL.get(i);
			pR = trackR.get(i);
			switch (mvStat) {
			case &quot;LEFT&quot;:
				pL.x += coef/2;
				pR.x += coef/2;
				
				//the obstacles move
				for(int j=0; j&lt;this.obsList.size(); j++) {
					this.obsList.get(j).vMoveLeft(coef/2);
				}
				for(int j=0; j&lt;this.oppList.size(); j++) {
					this.oppList.get(j).vMoveLeft(coef/2);
				}
				
				break;
				
			case &quot;RIGHT&quot;:
				pL.x -= coef/2;
				pR.x -= coef/2;
				
				//the obstacles move
				for(int j=0; j&lt;this.obsList.size(); j++) {
					this.obsList.get(j).vMoveRight(coef/2);
				}
				for(int j=0; j&lt;this.oppList.size(); j++) {
					this.oppList.get(j).vMoveRight(coef/2);
				}
				
				break;
				
			case &quot;UP&quot;:
				if(ZOOM > 0) {
					if(i == 0 || i == 1){
						pL.x += coef/4;
						pR.x -= coef/4;	
					}
					ZOOM --;
					
					//the obstacles move
					//this.vMoveUp(coef/10);
					for(int j=0; j&lt;this.obsList.size(); j++) {
						//this.obsList.get(j).vMoveUp(coef/10, this.obsW, this.obsH);
						this.obsList.get(j).vMoveUp(coef/10);
					}
					for(int j=0; j&lt;this.oppList.size(); j++) {
						//this.oppList.get(j).vMoveUp(coef/10, this.obsW, this.obsH);
						this.oppList.get(j).vMoveUp(coef/10);
					}
					
				}
				break;
				
			case &quot;DOWN&quot;:
				if(ZOOM &lt; 50) {
					
					if(i == 0 || i == 1){
						pL.x -= coef/4;
						pR.x += coef/4;	
					}
					
					ZOOM ++;
					
					//the obstacles move
					//this.vMoveDown(coef/10);
					for(int j=0; j&lt;this.obsList.size(); j++) {
						//this.obsList.get(j).vMoveDown(coef/10, this.obsW, this.obsH);
						this.obsList.get(j).vMoveDown(coef/10);
					}
					for(int j=0; j&lt;this.oppList.size(); j++) {
						//this.oppList.get(j).vMoveDown(coef/10, this.obsW, this.obsH);
						this.oppList.get(j).vMoveDown(coef/10);
					}
				}
				break;
				
			case &quot;NEUTRAL&quot;:
				break;
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn941mEeqhUNeKJfLXDg" name="checkObst" specification="_kJ3pMI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLgn-I1mEeqhUNeKJfLXDg" name="V" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLgn-Y1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>for(int i=0; i&lt;this.obsList.size(); i++) {
			//if(this.obsList.get(i).hitV(V.getCoord().x, V.getCoord().y, V.getHitWidth(), V.getHitHeight(), V.getZ())) {
			if(this.obsList.get(i).hitV(V)) {
				MOVEVAL = 10;
				return true;
			}
		}
		for(int i=0; i&lt;this.oppList.size(); i++) {
			//if(this.oppList.get(i).hitV(V.getCoord().x, V.getCoord().y, V.getHitWidth(), V.getHitHeight(), V.getZ())) {
			if(this.oppList.get(i).hitV(V)) {
				MOVEVAL = 10;
				return true;
			}
		}
		return false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLgn-o1mEeqhUNeKJfLXDg" name="addRandObst" specification="_kGaFgI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>Random rand = new Random();
		 
		int n = rand.nextInt(100);
		if(n&lt;3) {
			/** Obstacle on the ground. */
			int x = (trackL.get(2).x - 50) + rand.nextInt(100);
			this.obsList.add(new Obstacle(x, horHeight - 60));
		}else if(n==3) {
			/** Opponent */
			int x = trackL.get(2).x + rand.nextInt(50);
			Opponent o = new Opponent(x, horHeight - 20);
			this.oppList.add(o);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLhPAI1mEeqhUNeKJfLXDg" name="getHorizon" specification="_kGaFgY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLhPAY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return horHeight;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLhPAo1mEeqhUNeKJfLXDg" name="getSpeed" specification="_kGaskI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLhPA41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return MOVEVAL;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLhPBI1mEeqhUNeKJfLXDg" name="getDist" specification="_kGasko1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLhPBY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return traveledDist;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLhPBo1mEeqhUNeKJfLXDg" name="getScore" specification="_kGaslI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLhPB41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return score;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLhPCI1mEeqhUNeKJfLXDg" name="toCp" specification="_kGbToI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLhPCY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return DISTTOCP - traveledSinceCP;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLhPCo1mEeqhUNeKJfLXDg" name="setHorizon" specification="_kGbToo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLhPC41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>horHeight = n;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2EI1mEeqhUNeKJfLXDg" name="getTrackR" specification="_kGb6sY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLh2EY1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>return trackR;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2Eo1mEeqhUNeKJfLXDg" name="getCP" specification="_kGdI0I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLh2E41mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>//System.out.println(cpList.getCpList().size());
		return cpList.getCpList();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2FI1mEeqhUNeKJfLXDg" name="getOL" specification="_kGdv4Y1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLh2FY1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>return obsList;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2Fo1mEeqhUNeKJfLXDg" name="getOpL" specification="_kGe-AI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLh2F41mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>return oppList;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2GI1mEeqhUNeKJfLXDg" name="setMaxX" specification="_kGflEY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLh2GY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>maxX = n;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2Go1mEeqhUNeKJfLXDg" name="setMaxY" specification="_kGgMII1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLh2G41mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>maxY = n;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLh2HI1mEeqhUNeKJfLXDg" name="restart" specification="_kGgMIo1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.trackL = new ArrayList&lt;Point>();
		this.trackR= new ArrayList&lt;Point>();
		//this.cpList = new ArrayList&lt;CheckPoint>();
		this.obsList = new ArrayList&lt;Obstacle>();
		this.oppList = new ArrayList&lt;Opponent>();
		//this.cpList.add(new CheckPoint(this.horHeight));
		
		this.trackSize = 0;
		this.traveledDist = 0;
		this.score = 0;
		
		this.traveledSinceCP = 0;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGYQUI1mEeqhUNeKJfLXDg" name="Piste" method="_kLgA4o1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kGYQUY1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kGYQUo1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLuqZY1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - CONSTRUCTOR -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGYQU41mEeqhUNeKJfLXDg" type="_kGXCMI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGYQVI1mEeqhUNeKJfLXDg" name="createTrack" method="_kLgA5I1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLuqZo1mEeqhUNeKJfLXDg">
            <body>Creates a track with two initial points at the bottom of the screen, and adds more points generated with the addPoint() method
	 * Also creates the CheckPointList and gives it the value of the horizon
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGY3YI1mEeqhUNeKJfLXDg" name="addPoint" method="_kLgn8I1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRcI1mEeqhUNeKJfLXDg">
            <body>Adds a new Point at the horizon height to each part of the track.
	 * The point added to the left track has a random x and the point added to the right track is on its right
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGY3YY1mEeqhUNeKJfLXDg" name="speedUp" method="_kLgn8Y1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRcY1mEeqhUNeKJfLXDg">
            <body>Increases the speed by 2 if the current speed is not higher than 35 
	 * 
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGY3Yo1mEeqhUNeKJfLXDg" name="speedDown" method="_kLgn8o1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRco1mEeqhUNeKJfLXDg">
            <body>Decreases the speed by 1 if the current speed is not lower than 10 
	 * 
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGY3Y41mEeqhUNeKJfLXDg" name="moveTrack" method="_kLgn841mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRc41mEeqhUNeKJfLXDg">
            <body>Moves the track and everything on it from back to front.
	 *  Used also to give a perception of perspective.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGZecI1mEeqhUNeKJfLXDg" name="trackEffect" method="_kLgn9I1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRdI1mEeqhUNeKJfLXDg">
            <body>Moves the track depending on the movement of the Vehicle :
	 * Zooms in or out of the vehicle goes lower or higher and moves the track to the right (left) if the vehicle goes to the left (right) 
	 * @param mvStat a String, the direction of the vehicle, that indicates which movement the track does
	 * @param coef an integer that indicates how big the movement is
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGZecY1mEeqhUNeKJfLXDg" name="mvStat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGZeco1mEeqhUNeKJfLXDg" name="coef">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGaFgI1mEeqhUNeKJfLXDg" name="addRandObst" method="_kLgn-o1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRdo1mEeqhUNeKJfLXDg">
            <body>Adds an obstacle on the ground with a probability 2/100 or a flying obstacle with a probability of 1/100.
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGaFgY1mEeqhUNeKJfLXDg" name="getHorizon" method="_kLhPAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRd41mEeqhUNeKJfLXDg">
            <body>Gives the horizon height
	 * @return an integer, the height of the horizon
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGaFgo1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGaskI1mEeqhUNeKJfLXDg" name="getSpeed" method="_kLhPAo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvReI1mEeqhUNeKJfLXDg">
            <body>Gives the current speed at whitch the track moves
	 * @return an integer, the current speed
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGaskY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGasko1mEeqhUNeKJfLXDg" name="getDist" method="_kLhPBI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvReY1mEeqhUNeKJfLXDg">
            <body>Gives the current distance traveled by the Vehicle
	 * @return an integer,  the distance travelled
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGask41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGaslI1mEeqhUNeKJfLXDg" name="getScore" method="_kLhPBo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvReo1mEeqhUNeKJfLXDg">
            <body>Gives the score
	 * @return an integer,  the score
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGaslY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGbToI1mEeqhUNeKJfLXDg" name="toCp" method="_kLhPCI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kGbToY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGbToo1mEeqhUNeKJfLXDg" name="setHorizon" method="_kLhPCo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRe41mEeqhUNeKJfLXDg">
            <body>Sets the height of the horizon
	 * @param n an integer, the new height of the horizon
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGb6sI1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGb6sY1mEeqhUNeKJfLXDg" name="getTrackR" method="_kLh2EI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRfI1mEeqhUNeKJfLXDg">
            <body>Gives the list of point forming the right part of the track
	 * @return the list of Point forming the right part of the track
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKt9wI1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGdI0I1mEeqhUNeKJfLXDg" name="getCP" method="_kLh2Eo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRfY1mEeqhUNeKJfLXDg">
            <body>Gives the current checkpoint list
	 * @return the checkpoint list
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKt9wY1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGdv4Y1mEeqhUNeKJfLXDg" name="getOL" method="_kLh2FI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRfo1mEeqhUNeKJfLXDg">
            <body>Gives the current obstacle list
	 * @return the obstacle list
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKt9wo1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGe-AI1mEeqhUNeKJfLXDg" name="getOpL" method="_kLh2Fo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRf41mEeqhUNeKJfLXDg">
            <body>Gives the current opponent list
	 * @return the opponent list
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKt9w41mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGflEY1mEeqhUNeKJfLXDg" name="setMaxX" method="_kLh2GI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRgI1mEeqhUNeKJfLXDg">
            <body>Sets the maximum x coordinate that a track Point can have
	 * @param n an integer, the maximum X
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGflEo1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGgMII1mEeqhUNeKJfLXDg" name="setMaxY" method="_kLh2Go1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRgY1mEeqhUNeKJfLXDg">
            <body>Sets the maximum Y coordinate that a track Point can have
	 * @param n an integer, the maximum height
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGgMIY1mEeqhUNeKJfLXDg" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGgMIo1mEeqhUNeKJfLXDg" name="restart" method="_kLh2HI1mEeqhUNeKJfLXDg"/>
        <ownedOperation xmi:id="_kJ3pMI1mEeqhUNeKJfLXDg" name="checkObst" method="_kLgn941mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLvRdY1mEeqhUNeKJfLXDg">
            <body>Tests if the given vehicle hits one of the obstacles on the track
	 * @param V the vehicle
	 * @return true if the vehicle is hitting an obstacle, false otherwise
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJ3pMY1mEeqhUNeKJfLXDg" name="V" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kJ3pMo1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kGjPcI1mEeqhUNeKJfLXDg" name="Vehicule">
        <ownedAttribute xmi:id="_kLL30I1mEeqhUNeKJfLXDg" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLMe4o1mEeqhUNeKJfLXDg" name="z" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLMe441mEeqhUNeKJfLXDg" name="hitWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLNF8o1mEeqhUNeKJfLXDg" name="inFlight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLNtAI1mEeqhUNeKJfLXDg" name="mvStat" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLNtAo1mEeqhUNeKJfLXDg" name="startTime" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLOUEI1mEeqhUNeKJfLXDg" name="screenSize" visibility="package" type="_kJkuQI1mEeqhUNeKJfLXDg" association="_kMHE4Y1mEeqhUNeKJfLXDg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLOUEY1mEeqhUNeKJfLXDg" value="Toolkit.getDefaultToolkit().getScreenSize()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLv4gI1mEeqhUNeKJfLXDg" name="y" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLv4g41mEeqhUNeKJfLXDg" name="hitHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLwfko1mEeqhUNeKJfLXDg" name="isAlive" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLwflY1mEeqhUNeKJfLXDg" name="secTl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLidII1mEeqhUNeKJfLXDg" name="Vehicule" specification="_kGkdkI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLidIY1mEeqhUNeKJfLXDg" type="_kGjPcI1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>this.x = screenSize.width/2-this.hitWidth;
		this.y = screenSize.height/2+this.hitHeight;
		this.hitHeight = 150;
		this.hitWidth = 200;
		
		this.inFlight = false;
		this.isAlive = true;
		
		this.mvStat = &quot;NEUTRAL&quot;;
	
		this.startTime = -20;
		this.secTl = -20;
		
		this.z = this.y;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjEMI1mEeqhUNeKJfLXDg" name="getCoord" specification="_kGkdlI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjEMY1mEeqhUNeKJfLXDg" type="_kJlVUY1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>return new Point(x, y);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjEMo1mEeqhUNeKJfLXDg" name="getCenter" specification="_kGlEoI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjEM41mEeqhUNeKJfLXDg" type="_kJlVUY1mEeqhUNeKJfLXDg" direction="return"/>
          <language>java</language>
          <body>return new Point(x+hitWidth/2, y+hitHeight/2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjENI1mEeqhUNeKJfLXDg" name="getHitWidth" specification="_kGlEoY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjENY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return hitWidth;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjENo1mEeqhUNeKJfLXDg" name="getHitHeight" specification="_kGlEo41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjEN41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return hitHeight;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjEOI1mEeqhUNeKJfLXDg" name="getFlyStatus" specification="_kGlrsY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjEOY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return inFlight;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjEOo1mEeqhUNeKJfLXDg" name="getAlive" specification="_kGlrs41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjEO41mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return isAlive;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjEPI1mEeqhUNeKJfLXDg" name="getTTL" specification="_kGmSwY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjEPY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>return secTl;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjrQI1mEeqhUNeKJfLXDg" name="move" specification="_kGmSw41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjrQY1mEeqhUNeKJfLXDg" name="mvDir">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLjrQo1mEeqhUNeKJfLXDg" name="coef">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>mvStat = mvDir;
		switch (mvStat) {
			case &quot;LEFT&quot;:
				if(x  &lt;= hitWidth) {
					x = hitWidth;
					break;
				}
				x -= coef;
				break;
			case &quot;RIGHT&quot;:
				if(x  >= screenSize.width - hitWidth) {
					x = screenSize.width - hitWidth;
					break;
				}
				x += coef;
				break;
			case &quot;UP&quot;:
				if(y  &lt;= (int)(screenSize.height*0.4)) {
					y = (int)(screenSize.height*0.4);
					break;
				}
				y -= coef;
				break;
			case &quot;DOWN&quot;:
				if(y  >= screenSize.height - 2*hitHeight) {
					y = screenSize.height - 2*hitHeight;
					break;
				}
				y += coef;
				break;
			case &quot;NEUTRAL&quot;:
				break;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjrQ41mEeqhUNeKJfLXDg" name="timeDecrease" specification="_kGm50I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjrRI1mEeqhUNeKJfLXDg" name="l">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>if(secTl >= 1) secTl = startTime - l;
		if(secTl == 0) stopRace();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjrRY1mEeqhUNeKJfLXDg" name="addTime" specification="_kGm50o1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjrRo1mEeqhUNeKJfLXDg" name="l">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>startTime = secTl + l;
		secTl += l;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjrR41mEeqhUNeKJfLXDg" name="getMoveStatus" specification="_kGng4I1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLjrSI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return mvStat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjrSY1mEeqhUNeKJfLXDg" name="startRace" specification="_kGng4o1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>inFlight = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLjrSo1mEeqhUNeKJfLXDg" name="stopRace" specification="_kGng441mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>isAlive = false;
		inFlight = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLkSUI1mEeqhUNeKJfLXDg" name="restart" specification="_kGoH8I1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>x = screenSize.width/2-hitWidth;
		y = screenSize.height/2+hitHeight;

		this.inFlight = false;
		this.isAlive = true;
		
		this.mvStat = &quot;NEUTRAL&quot;;
	
		this.startTime = 0;
		this.secTl = 0;
		
		this.z = this.y;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGkdkI1mEeqhUNeKJfLXDg" name="Vehicule" method="_kLidII1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kGkdkY1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kGkdko1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kLxGoo1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - CONSTRUCTOR -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGkdk41mEeqhUNeKJfLXDg" type="_kGjPcI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGkdlI1mEeqhUNeKJfLXDg" name="getCoord" method="_kLjEMI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGo41mEeqhUNeKJfLXDg">
            <body>Gives a point with the coordinates of the vehicle
	 * @return a Point with the coordinates of the vehicle
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKvL4I1mEeqhUNeKJfLXDg" type="_kJlVUY1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGlEoI1mEeqhUNeKJfLXDg" name="getCenter" method="_kLjEMo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kKvy8I1mEeqhUNeKJfLXDg" type="_kJlVUY1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kGlEoY1mEeqhUNeKJfLXDg" name="getHitWidth" method="_kLjENI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGpI1mEeqhUNeKJfLXDg">
            <body>Gives the width of the hitbox of the vehicle
	 * @return an int, the width of the hitbox
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGlEoo1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGlEo41mEeqhUNeKJfLXDg" name="getHitHeight" method="_kLjENo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGpY1mEeqhUNeKJfLXDg">
            <body>Gives the height of the hitbox of the vehicle
	 * @return an int, the height of the hitbox
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGlrsI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGlrsY1mEeqhUNeKJfLXDg" name="getFlyStatus" method="_kLjEOI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGpo1mEeqhUNeKJfLXDg">
            <body>Gives the flying status of the vehicle
	 * @return true if he vehicle is in flight, false otherwise
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGlrso1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGlrs41mEeqhUNeKJfLXDg" name="getAlive" method="_kLjEOo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGp41mEeqhUNeKJfLXDg">
            <body>Tells if the game is on
	 * @return true if the vehicle is playing, false otherwise
	 * *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGmSwI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGmSwY1mEeqhUNeKJfLXDg" name="getTTL" method="_kLjEPI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGqI1mEeqhUNeKJfLXDg">
            <body>Gives the remaining time to live of the vehicle 
	 * @return the time in milliseconds
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGmSwo1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGmSw41mEeqhUNeKJfLXDg" name="move" method="_kLjrQI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGqY1mEeqhUNeKJfLXDg">
            <body>Moves the vehicle a given distance in a given direction : left, right, up or down the screen
	 * @param mvDir a String, the direction where the vehicle will go
	 * @param coef an int, the distance the vehicle will travel
	 * *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGmSxI1mEeqhUNeKJfLXDg" name="mvDir">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kGmSxY1mEeqhUNeKJfLXDg" name="coef">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGm50I1mEeqhUNeKJfLXDg" name="timeDecrease" method="_kLjrQ41mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGqo1mEeqhUNeKJfLXDg">
            <body>Reduces the time of the start timer if it is higher than 1ms
	 * @param l the time we remove
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGm50Y1mEeqhUNeKJfLXDg" name="l">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGm50o1mEeqhUNeKJfLXDg" name="addTime" method="_kLjrRY1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGq41mEeqhUNeKJfLXDg">
            <body>Adds time to the start timer
	 * @param l the time we add
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGm5041mEeqhUNeKJfLXDg" name="l">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGng4I1mEeqhUNeKJfLXDg" name="getMoveStatus" method="_kLjrR41mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGrI1mEeqhUNeKJfLXDg">
            <body>Gives the status of the movement : tells if the vehicle is going up, down, left, right or if it doesn't move
	 * @return a String, the status of the movement
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGng4Y1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGng4o1mEeqhUNeKJfLXDg" name="startRace" method="_kLjrSY1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxGrY1mEeqhUNeKJfLXDg">
            <body>Starts the race : puts the vehicle in flight
	 * 
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGng441mEeqhUNeKJfLXDg" name="stopRace" method="_kLjrSo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxtsI1mEeqhUNeKJfLXDg">
            <body>Stops the race : sets the statuses of the vehicle as not in flight and not alive
	 * 
	 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGoH8I1mEeqhUNeKJfLXDg" name="restart" method="_kLkSUI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_kLxtsY1mEeqhUNeKJfLXDg">
            <body>Puts the vehicle at it's initial values
	 * 
	 *</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMEooY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMEooo1mEeqhUNeKJfLXDg _kLCt4Y1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMEooo1mEeqhUNeKJfLXDg" name="" type="_kGHxoI1mEeqhUNeKJfLXDg" association="_kMEooY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMEopI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMEopY1mEeqhUNeKJfLXDg _kLFxM41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMEopY1mEeqhUNeKJfLXDg" name="" type="_kGTX0I1mEeqhUNeKJfLXDg" association="_kMEopI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMFPsY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMFPso1mEeqhUNeKJfLXDg _kLI0gY1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMFPso1mEeqhUNeKJfLXDg" name="" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMFPsY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMF2wY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMF2wo1mEeqhUNeKJfLXDg _kLKCoY1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMF2wo1mEeqhUNeKJfLXDg" name="" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMF2wY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMGd0Y1mEeqhUNeKJfLXDg" name="" memberEnd="_kMGd0o1mEeqhUNeKJfLXDg _kLKCo41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMGd0o1mEeqhUNeKJfLXDg" name="" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMGd0Y1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMGd1I1mEeqhUNeKJfLXDg" name="" memberEnd="_kMGd1Y1mEeqhUNeKJfLXDg _kLKpso1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMGd1Y1mEeqhUNeKJfLXDg" name="" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMGd1I1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMHE4Y1mEeqhUNeKJfLXDg" name="" memberEnd="_kMHE4o1mEeqhUNeKJfLXDg _kLOUEI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMHE4o1mEeqhUNeKJfLXDg" name="" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kMHE4Y1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMb1AI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMb1AY1mEeqhUNeKJfLXDg _kLuqYo1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMb1AY1mEeqhUNeKJfLXDg" name="" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMb1AI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kETMs41mEeqhUNeKJfLXDg" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_kGpWEI1mEeqhUNeKJfLXDg" name="Affichage">
        <generalization xmi:id="_kK0rcI1mEeqhUNeKJfLXDg" general="_kKCoUY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLO7II1mEeqhUNeKJfLXDg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLO7IY1mEeqhUNeKJfLXDg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLO7Io1mEeqhUNeKJfLXDg" name="screenSize" visibility="package" type="_kJkuQI1mEeqhUNeKJfLXDg" association="_kMHE5I1mEeqhUNeKJfLXDg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLO7I41mEeqhUNeKJfLXDg" value="Toolkit.getDefaultToolkit().getScreenSize()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLPiMY1mEeqhUNeKJfLXDg" name="WIDTH" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLPiMo1mEeqhUNeKJfLXDg" value="screenSize.width"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLQJQI1mEeqhUNeKJfLXDg" name="HEIGHT" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLQJQY1mEeqhUNeKJfLXDg" value="screenSize.height"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLQJQ41mEeqhUNeKJfLXDg" name="horHeight" visibility="private" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kLQJRI1mEeqhUNeKJfLXDg" value="(int) (this.HEIGHT*0.17)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLQwUY1mEeqhUNeKJfLXDg" name="showHitbox" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLQwU41mEeqhUNeKJfLXDg" name="V" visibility="private" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kMHr8Y1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLRXYI1mEeqhUNeKJfLXDg" name="P" visibility="private" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kMITAI1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLRXYo1mEeqhUNeKJfLXDg" name="spaceships" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLR-cI1mEeqhUNeKJfLXDg" name="imgV" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMbN8I1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLTMkI1mEeqhUNeKJfLXDg" name="green_light" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLTzoY1mEeqhUNeKJfLXDg" name="mvBg" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kLTzoo1mEeqhUNeKJfLXDg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLUasY1mEeqhUNeKJfLXDg" name="starttime">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLxttI1mEeqhUNeKJfLXDg" name="effects" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLyUwY1mEeqhUNeKJfLXDg" name="parallax_mountains" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLyUxI1mEeqhUNeKJfLXDg" name="ground" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLy70Y1mEeqhUNeKJfLXDg" name="obstacle" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLy71I1mEeqhUNeKJfLXDg" name="checkpt" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kLzi4I1mEeqhUNeKJfLXDg" name="imgEff" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMb1A41mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLzi441mEeqhUNeKJfLXDg" name="imgBg" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMccEY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kLzi5o1mEeqhUNeKJfLXDg" name="imgG" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMdDIY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kL0J8o1mEeqhUNeKJfLXDg" name="imgObst" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMdqMY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kL0J9Y1mEeqhUNeKJfLXDg" name="imgCp" visibility="private" type="_kJxikI1mEeqhUNeKJfLXDg" association="_kMeRQY1mEeqhUNeKJfLXDg"/>
        <ownedAttribute xmi:id="_kL0xB41mEeqhUNeKJfLXDg" name="grass_move" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kL1YEI1mEeqhUNeKJfLXDg" name="secPassed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLkSUY1mEeqhUNeKJfLXDg" name="getWidth" specification="_kGqkMI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLkSUo1mEeqhUNeKJfLXDg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return WIDTH;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLkSU41mEeqhUNeKJfLXDg" name="getHeight" specification="_kGrLQI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLkSVI1mEeqhUNeKJfLXDg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return HEIGHT;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLk5YI1mEeqhUNeKJfLXDg" name="loadImgV" specification="_kGryUI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.spaceships = &quot;./assets/spaceships/&quot;;
 	this.imgV= new ArrayList&lt;BufferedImage>();
 	
  	imgV.add(ImageIO.read(new File(spaceships+&quot;colored-ufo.png&quot;)));
  	imgV.add(ImageIO.read(new File(spaceships+&quot;ennemy-ufo.png&quot;)));

 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLk5YY1mEeqhUNeKJfLXDg" name="loadImgEff" specification="_kGryUY1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.effects = &quot;./assets/effects/green-particle/&quot;;
 	this.imgEff= new ArrayList&lt;BufferedImage>();
 	
 	imgEff.add(ImageIO.read(new File(effects+&quot;1.png&quot;)));
 	imgEff.add(ImageIO.read(new File(effects+&quot;2.png&quot;)));
 	imgEff.add(ImageIO.read(new File(effects+&quot;3.png&quot;)));
 	imgEff.add(ImageIO.read(new File(effects+&quot;4.png&quot;)));
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLk5Yo1mEeqhUNeKJfLXDg" name="loadImgBg" specification="_kGryUo1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.parallax_mountains = &quot;./assets/parallax_mountain_pack/layers/&quot;;
 	this.imgBg= new ArrayList&lt;BufferedImage>();
 	
 	imgBg.add(ImageIO.read(new File(parallax_mountains+&quot;parallax-mountain-bg.png&quot;)));
 	imgBg.add(ImageIO.read(new File(parallax_mountains+&quot;parallax-mountain-montain-far.png&quot;)));
 	imgBg.add(ImageIO.read(new File(parallax_mountains+&quot;parallax-mountain-mountains.png&quot;)));
 	imgBg.add(ImageIO.read(new File(parallax_mountains+&quot;parallax-mountain-trees.png&quot;)));
 	imgBg.add(ImageIO.read(new File(parallax_mountains+&quot;parallax-mountain-foreground-trees.png&quot;)));
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLk5Y41mEeqhUNeKJfLXDg" name="loadImgGround" specification="_kGsZYI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.ground = &quot;./assets/ground/&quot;;
 	this.imgG = new ArrayList&lt;BufferedImage>();
 	
 	imgG.add(ImageIO.read(new File(ground+&quot;grass.png&quot;)));
 	
 	for(int i = 1; i &lt; 11; i++) {
 		imgG.add(ImageIO.read(new File(ground+&quot;moving_grass_&quot;+i+&quot;.png&quot;)));
 	}
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLk5ZI1mEeqhUNeKJfLXDg" name="loadImgObst" specification="_kGsZYY1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.obstacle = &quot;./assets/obstacles/&quot;;
 	this.imgObst = new ArrayList&lt;BufferedImage>();
 	
 	imgObst.add(ImageIO.read(new File(obstacle + &quot;pine.png&quot;)));
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLlgcI1mEeqhUNeKJfLXDg" name="loadImgCp" specification="_kGtAcI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.checkpt = &quot;./assets/checkpoints/&quot;;
 	this.imgCp = new ArrayList&lt;BufferedImage>();
 	
 	imgCp.add(ImageIO.read(new File(checkpt + &quot;cp.png&quot;)));
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLlgdI1mEeqhUNeKJfLXDg" name="getSec" specification="_kGtAcY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLlgdY1mEeqhUNeKJfLXDg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>return secPassed;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLlgdo1mEeqhUNeKJfLXDg" name="setSecPassed" specification="_kGtngY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLlgd41mEeqhUNeKJfLXDg" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>secPassed = s;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHgI1mEeqhUNeKJfLXDg" name="Affichage" specification="_kKEdgI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHgY1mEeqhUNeKJfLXDg" name="v" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLmHgo1mEeqhUNeKJfLXDg" name="p" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLmHg41mEeqhUNeKJfLXDg" type="_kGpWEI1mEeqhUNeKJfLXDg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this.mvBg = new int[]{0, 0, 0, 0};

 	this.showHitbox = false;
 	this.setPreferredSize(new Dimension(WIDTH, HEIGHT));
 	this.V = v;
 	this.P = p;
 	
 	this.P.setHorizon(this.horHeight);
 	this.P.setMaxX(this.WIDTH);
 	this.P.setMaxY(this.HEIGHT);
 	
 	this.P.createTrack();  	
  
 	this.loadImgV();
 	this.loadImgEff();
 	this.loadImgBg();
 	this.loadImgObst();
 	this.loadImgGround();
 	this.loadImgCp();
 	
 	this.green_light = 0;
 	this.grass_move = 1;
 	
		this.starttime = System.currentTimeMillis();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHhI1mEeqhUNeKJfLXDg" name="drawPiste" specification="_kKxoII1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHhY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>/** Track */
 	g2d.drawLine(0, P.getHorizon(), WIDTH, P.getHorizon());
 	
 	ArrayList&lt;Point> ptL = P.getTrackL();
 	ArrayList&lt;Point> ptR = P.getTrackR();
 	ArrayList&lt;CheckPoint> cpL = P.getCP();
 	
 	/** Filling the road in black */
 	Polygon poly = new Polygon();

 	for(int i=0; i&lt;ptL.size(); i++) {
 		Point TempL = ptL.get(i);
 		poly.addPoint(TempL.x, TempL.y);
 	}
 	for(int i=ptL.size()-1; i>=0; i--) {
 		Point Temp = ptR.get(i);
 		poly.addPoint(Temp.x, Temp.y);
 	}
 			
 	g2d.fillPolygon(poly);
 	
 	g2d.setColor(Color.WHITE);
 	Stroke s = new BasicStroke(
 				2.0f, // Width 
 				BasicStroke.CAP_SQUARE, // End cap 
 				BasicStroke.JOIN_MITER,// Join style 
 				10.0f, // Miter limit 
 				new float[] {20.0f,20.0f}, // Dash pattern 
 				0.0f);
 	g2d.setStroke(s);
 	g2d.setColor(Color.lightGray);
 	// White lines
 	//Left
 	Polygon polyLG = new Polygon();

 	for(int i=0; i&lt;ptL.size(); i++) {
 		Point TempL = ptL.get(i);
 		int ecart = ptR.get(i).x - TempL.x;
 		polyLG.addPoint(TempL.x+ecart/10, TempL.y);
 	}
 	for(int i=ptL.size()-1; i>=0; i--) {
 		Point TempL = ptL.get(i);
 		int ecart = ptR.get(i).x - TempL.x;
 		polyLG.addPoint(TempL.x+ecart/10+ecart/20, TempL.y);
 	}
 	
 	
 	//Right 
 	Polygon polyLR = new Polygon();

 	for(int i=0; i&lt;ptR.size(); i++) {
 		Point Temp = ptR.get(i);
 		int ecart = Temp.x - ptL.get(i).x;
 		polyLR.addPoint(Temp.x-ecart/12-ecart/20, Temp.y);
 	}
 	for(int i=ptL.size()-1; i>=0; i--) {
 		Point Temp = ptR.get(i);
 		int ecart = Temp.x - ptL.get(i).x;
 		polyLR.addPoint(Temp.x-ecart/12, Temp.y);
 	}
 	g2d.fillPolygon(polyLR);
 	
 			
 	/** Left track : trackL */
 	Point prevL = null;
		for(Point Temp : ptL) {
			if(prevL != null) {
				g2d.drawLine(prevL.x, prevL.y, Temp.x, Temp.y);
				if(showHitbox) {
					/** Acceleration zone : left delimiter */
					g2d.setColor(Color.RED);
					g2d.drawLine(Temp.x, HEIGHT, Temp.x, Temp.y);
					g2d.setColor(Color.BLACK);
				}
			}
			prevL = Temp;
		}
 	
		/** Right track : trackR */
		Point prevR = null;
		for(Point Temp : ptR) {
			if(prevR != null) {
				g2d.drawLine(prevR.x, prevR.y, Temp.x, Temp.y);
				if(showHitbox) {
					/** Acceleration zone : right delimiter */
					g2d.setColor(Color.RED);
					g2d.drawLine(Temp.x, HEIGHT, Temp.x, Temp.y);
					g2d.setColor(Color.BLACK);
				}
			}
			prevR= Temp;
		}
		
		/** Checkpoints */
		for(CheckPoint cp : cpL) {
			if(showHitbox) {
				g2d.drawLine(0, cp.getHeight(), WIDTH, cp.getHeight());
			}
			for(int x = 0; x &lt; WIDTH; x += imgCp.get(0).getWidth()) {
				g2d.drawImage(
						imgCp.get(0),
						x, cp.getHeight(),
						100, 30,
						null);
			}
			
			
		}
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHho1mEeqhUNeKJfLXDg" name="drawObstacles" specification="_kKxoIo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHh41mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>ArrayList&lt;Obstacle> oL = P.getOL();
 
 	for(int i = oL.size()-1; i >= 0; i--) {
 		Obstacle o = oL.get(i);
 		g2d.setColor(Color.GRAY);

 		g2d.drawImage(
 				imgObst.get(0),
 				o.getX(), o.getY(),
 				o.getW(), o.getH(),
 				null);
 		if(this.showHitbox) {
	    		g2d.drawRect(o.getX(), o.getY(), o.getW(), o.getH());
	    		g2d.setColor(Color.BLACK);
 		}
 		
 	}
 	
 	ArrayList&lt;Opponent> opL = P.getOpL();
 	for(Opponent o : opL) {
 		g2d.drawImage(
 				imgV.get(1),
 				o.getX(), o.getY(),
 				o.getW(), o.getH(),
 				null);
 		if(this.showHitbox) {
 			g2d.setColor(Color.GRAY);
	    		g2d.drawRect(o.getX(), o.getY(), o.getW(), o.getH());
	    		g2d.setColor(Color.BLACK);
 		}
 	}
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHiI1mEeqhUNeKJfLXDg" name="drawScore" specification="_kKyPMI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHiY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>g2d.setColor(Color.WHITE);
 	String speed = &quot;speed : &quot; + P.getSpeed() * 10 + &quot; km/h&quot;;
 	String distToCheck = &quot;CheckPoint : &quot; + P.toCp() + &quot; m&quot;;
 	String dist = &quot;Score : &quot; + P.getScore();

 	g2d.drawString(speed, 10, 25);
 	g2d.drawString(dist, 10, 45);
 	g2d.drawString(distToCheck, 10, 65);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHio1mEeqhUNeKJfLXDg" name="drawTimer" specification="_kKy2QI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHi41mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>g2d.setColor(Color.WHITE);
 	
 	long minPassed = secPassed/60;
 	long affSecPassed = secPassed - minPassed*60;
 	String totTime = &quot;Timer : &quot; + minPassed + &quot;m &quot; + affSecPassed + &quot;s&quot;;
 	
 	long minTl = V.getTTL()/60;
 	long secTl = V.getTTL() - minTl*60;
 	String TimeLeft = &quot;Game Over : &quot; + minTl + &quot;m &quot; + secTl + &quot;s&quot;;
 	
 	g2d.drawString(totTime, WIDTH-130, 25);
 	g2d.drawString(TimeLeft, WIDTH-200, 45);
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHjI1mEeqhUNeKJfLXDg" name="drawVehicule" specification="_kKy2Qo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHjY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>Point vcoord = V.getCoord();
 	Point center = new Point(vcoord.x+ V.getHitWidth()/2, vcoord.y+V.getHitHeight()/2);
 	
 	Rectangle rect1 = new Rectangle(vcoord.x, vcoord.y, V.getHitWidth(), V.getHitHeight());
 	
 	switch(V.getMoveStatus()) {
	    	case &quot;LEFT&quot;:
				g2d.rotate(Math.toRadians(-20), rect1.x+rect1.width/4, rect1.y);
				break;
			case &quot;RIGHT&quot;:
				g2d.rotate(Math.toRadians(20),rect1.x+rect1.width-(rect1.width/4), rect1.y);
				break;
			case &quot;UP&quot;:
				break;
			case &quot;DOWN&quot;:
				break;
			case &quot;NEUTRAL&quot;:
				break;
 	}
 	    
     if(V.getFlyStatus()) { drawFlyEffect(g2d, vcoord);}
     
 	g2d.drawImage(
 			imgV.get(0),
 			vcoord.x, vcoord.y,
 			V.getHitWidth(), V.getHitHeight(),
 			null);
 	
 	if(this.showHitbox) {
 		g2d.draw(rect1);
    	 
     	g2d.drawLine(center.x+5, center.y+5, center.x-5, center.y-5);
     	g2d.drawLine(center.x-5, center.y+5, center.x+5, center.y-5);
 	}
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHjo1mEeqhUNeKJfLXDg" name="drawBg" specification="_kKzdUI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHj41mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>for(int i = 0; i &lt; imgBg.size(); i++){
 		BufferedImage I = imgBg.get(i);
 		if (i == 0) {
 			g2d.drawImage(
     				I, 
     				0,0,
     				WIDTH, horHeight-2, 
     				null);
 		} else {
 			int imageW = I.getWidth();
 			// Tile the image to fill our area.
 	        for (int x = -10*WIDTH; x &lt; 10*WIDTH; x += imageW) {
	    	        g2d.drawImage(
	    	        		I, 
	    	        		x + mvBg[i-1], 0,
	    	        		this);
 	        }
 		}
 	}
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmHkI1mEeqhUNeKJfLXDg" name="drawGround" specification="_kKzdUo1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmHkY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>BufferedImage I = imgG.get(0);
 	/*
 	g2d.drawImage(
				I, 
				0, horHeight ,
				null);
 	
 	*/
 	
 	g2d.drawImage(
				I, 
				0, horHeight ,
				WIDTH, HEIGHT - horHeight - V.getCoord().y/6,
				null);
		
		
 	
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmukI1mEeqhUNeKJfLXDg" name="drawFlyEffect" specification="_kK0EYI1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmukY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kLmuko1mEeqhUNeKJfLXDg" name="coord" type="_kJlVUY1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>g2d.drawImage(
 			imgEff.get(green_light), 
 			coord.x, coord.y+V.getHitHeight()/2, 
 			V.getHitWidth(), V.getHitHeight(),
 			null);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmuk41mEeqhUNeKJfLXDg" name="paint" specification="_kK0EY41mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmulI1mEeqhUNeKJfLXDg" name="g" type="_kJ9v0Y1mEeqhUNeKJfLXDg"/>
          <language>java</language>
          <body>paintComponent(g);
 	
 	Graphics2D g2d = (Graphics2D) g;
 	Graphics2D temp;
 	temp = (Graphics2D) g2d.create();
 	
 	g2d.setFont(new Font(&quot;TimesRoman&quot;, Font.PLAIN, 20)); 
 	
 	drawGround(g2d);
 	drawPiste(g2d);
 	drawBg(g2d);
 	drawObstacles(temp);
 	drawScore(g2d);
 	drawTimer(g2d);
 	drawVehicule(g2d);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmulY1mEeqhUNeKJfLXDg" name="change" specification="_kGu1oI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>repaint();
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmulo1mEeqhUNeKJfLXDg" name="incrView" specification="_kGu1oY1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>/*
 	if(grass_move &lt; 10) { grass_move ++; }
 	else { grass_move = 1; }
 	*/
 	if(green_light &lt; 3) { green_light ++; }
 	else { green_light = 0; }
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmul41mEeqhUNeKJfLXDg" name="showHitbox" specification="_kGvcsI1mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>if(this.showHitbox) this.showHitbox = false;
 	else this.showHitbox = true;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmumI1mEeqhUNeKJfLXDg" name="set_bg_parallax" specification="_kGvcsY1mEeqhUNeKJfLXDg">
          <ownedParameter xmi:id="_kLmumY1mEeqhUNeKJfLXDg" name="dir">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>switch(dir) {
 		case &quot;LEFT&quot;:
 			mvBg [0] += 1;
 			mvBg [1] += 2;
 			mvBg [2] += 3;
 			mvBg [3] += 4;
 			break;
 		case &quot;RIGHT&quot;:
 			mvBg [0] -= 1;
 			mvBg [1] -= 2;
 			mvBg [2] -= 3;
 			mvBg [3] -= 4;
 			break;
 	}
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLmumo1mEeqhUNeKJfLXDg" name="restart" specification="_kGvcs41mEeqhUNeKJfLXDg">
          <language>java</language>
          <body>this.mvBg = new int[]{0, 0, 0, 0};
 	
 	this.showHitbox = false;
 	this.green_light = 0;
 	
		this.starttime = System.currentTimeMillis();
 	this.P.createTrack();
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kGqkMI1mEeqhUNeKJfLXDg" name="getWidth" method="_kLkSUY1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26wI1mEeqhUNeKJfLXDg">
            <body>Gives the default width of the interface
     * @return an int, the width of the interface
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGqkMY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGrLQI1mEeqhUNeKJfLXDg" name="getHeight" method="_kLkSU41mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26wY1mEeqhUNeKJfLXDg">
            <body>Gives the default height of the interface
     * @return an int, the height of the interface
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGrLQY1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGryUI1mEeqhUNeKJfLXDg" name="loadImgV" visibility="private" method="_kLk5YI1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26wo1mEeqhUNeKJfLXDg">
            <body>Loads and adds all the images representing the Vehicle to the imgV ArrayList*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGryUY1mEeqhUNeKJfLXDg" name="loadImgEff" visibility="private" method="_kLk5YY1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26w41mEeqhUNeKJfLXDg">
            <body>Loads and adds all the images representing flying effects to the imgEff ArrayList*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGryUo1mEeqhUNeKJfLXDg" name="loadImgBg" visibility="private" method="_kLk5Yo1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26xI1mEeqhUNeKJfLXDg">
            <body>Loads and adds all the elements of the background image to the imgBg ArrayList *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGsZYI1mEeqhUNeKJfLXDg" name="loadImgGround" visibility="private" method="_kLk5Y41mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26xY1mEeqhUNeKJfLXDg">
            <body>Loads and adds all the images representing the ground to the imgG ArrayList*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGsZYY1mEeqhUNeKJfLXDg" name="loadImgObst" visibility="private" method="_kLk5ZI1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26xo1mEeqhUNeKJfLXDg">
            <body>Loads and adds all the images representing Obstacles to the imgObst ArrayList*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGtAcI1mEeqhUNeKJfLXDg" name="loadImgCp" visibility="private" method="_kLlgcI1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I26x41mEeqhUNeKJfLXDg">
            <body>Loads and adds all the images representing Obstacles to the imgObst ArrayList*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGtAcY1mEeqhUNeKJfLXDg" name="getSec" method="_kLlgdI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h0I1mEeqhUNeKJfLXDg">
            <body>Function to get the seconds that have passed.
     * @return a long : the seconds</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGtngI1mEeqhUNeKJfLXDg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGtngY1mEeqhUNeKJfLXDg" name="setSecPassed" method="_kLlgdo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h0Y1mEeqhUNeKJfLXDg">
            <body>Function to add to the seconds that have passed
     * @param s the long to add</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGtngo1mEeqhUNeKJfLXDg" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGu1oI1mEeqhUNeKJfLXDg" name="change" method="_kLmulY1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h3I1mEeqhUNeKJfLXDg">
            <body>Repaints the interface : used if there is a change
     * 
     *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGu1oY1mEeqhUNeKJfLXDg" name="incrView" method="_kLmulo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h3Y1mEeqhUNeKJfLXDg">
            <body>of the vehicle and effect images to animate them
     * 
     *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGvcsI1mEeqhUNeKJfLXDg" name="showHitbox" method="_kLmul41mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h3o1mEeqhUNeKJfLXDg">
            <body>Loads and adds all the vehicle images to the imgV ArrayList*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kGvcsY1mEeqhUNeKJfLXDg" name="set_bg_parallax" method="_kLmumI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h341mEeqhUNeKJfLXDg">
            <body>Sets the movement coefficient for our background images.
     * @param dir the direction in which the vehicle is going.</body>
          </ownedComment>
          <ownedParameter xmi:id="_kGvcso1mEeqhUNeKJfLXDg" name="dir">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kGvcs41mEeqhUNeKJfLXDg" name="restart" method="_kLmumo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h4I1mEeqhUNeKJfLXDg">
            <body>Restores everything to default.s</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kKEdgI1mEeqhUNeKJfLXDg" name="Affichage" method="_kLmHgI1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
          <eAnnotations xmi:id="_kKEdg41mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kKEdhI1mEeqhUNeKJfLXDg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_-I3h0o1mEeqhUNeKJfLXDg">
            <body>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 *                    - CONSTRUCTOR -
	 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKEdgY1mEeqhUNeKJfLXDg" name="v" type="_kGjPcI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kKEdgo1mEeqhUNeKJfLXDg" name="p" type="_kGXCMI1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kKEdhY1mEeqhUNeKJfLXDg" type="_kGpWEI1mEeqhUNeKJfLXDg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKxoII1mEeqhUNeKJfLXDg" name="drawPiste" visibility="private" method="_kLmHhI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h041mEeqhUNeKJfLXDg">
            <body>Draws the track
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKxoIY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKxoIo1mEeqhUNeKJfLXDg" name="drawObstacles" visibility="private" method="_kLmHho1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h1I1mEeqhUNeKJfLXDg">
            <body>Draws the obstacles of the track
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKxoI41mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKyPMI1mEeqhUNeKJfLXDg" name="drawScore" visibility="private" method="_kLmHiI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h1Y1mEeqhUNeKJfLXDg">
            <body>Draws the current speed and the distance traveled
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKyPMY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKy2QI1mEeqhUNeKJfLXDg" name="drawTimer" visibility="private" method="_kLmHio1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h1o1mEeqhUNeKJfLXDg">
            <body>Draws the time since beginning of the game and time left until next checkpoint
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKy2QY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKy2Qo1mEeqhUNeKJfLXDg" name="drawVehicule" visibility="private" method="_kLmHjI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h141mEeqhUNeKJfLXDg">
            <body>Draws the vehicle at the right coordinates
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKy2Q41mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKzdUI1mEeqhUNeKJfLXDg" name="drawBg" visibility="private" method="_kLmHjo1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h2I1mEeqhUNeKJfLXDg">
            <body>Draws the background image
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKzdUY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKzdUo1mEeqhUNeKJfLXDg" name="drawGround" visibility="private" method="_kLmHkI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h2Y1mEeqhUNeKJfLXDg">
            <body>Draws the ground image
     * @param g2d the graphics2D on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKzdU41mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kK0EYI1mEeqhUNeKJfLXDg" name="drawFlyEffect" visibility="private" method="_kLmukI1mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h2o1mEeqhUNeKJfLXDg">
            <body>Draws an image representing effects where the vehicle is flying
     * @param g2d the graphics2D on which we draw
     * @param coord the Point where we draw the image
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK0EYY1mEeqhUNeKJfLXDg" name="g2d" type="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
          <ownedParameter xmi:id="_kK0EYo1mEeqhUNeKJfLXDg" name="coord" type="_kJlVUY1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kK0EY41mEeqhUNeKJfLXDg" name="paint" method="_kLmuk41mEeqhUNeKJfLXDg">
          <ownedComment xmi:id="_-I3h241mEeqhUNeKJfLXDg">
            <body>Draws every element of this interface on a Graphics
     * @param g a Graphics on which we draw
     *</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK0EZI1mEeqhUNeKJfLXDg" name="g" type="_kJ9v0Y1mEeqhUNeKJfLXDg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMHE5I1mEeqhUNeKJfLXDg" name="" memberEnd="_kMHE5Y1mEeqhUNeKJfLXDg _kLO7Io1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMHE5Y1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMHE5I1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMHr8Y1mEeqhUNeKJfLXDg" name="" memberEnd="_kMHr8o1mEeqhUNeKJfLXDg _kLQwU41mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMHr8o1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMHr8Y1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMITAI1mEeqhUNeKJfLXDg" name="" memberEnd="_kMITAY1mEeqhUNeKJfLXDg _kLRXYI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMITAY1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMITAI1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMbN8I1mEeqhUNeKJfLXDg" name="" memberEnd="_kMbN8Y1mEeqhUNeKJfLXDg _kLR-cI1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMbN8Y1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMbN8I1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMb1A41mEeqhUNeKJfLXDg" name="" memberEnd="_kMb1BI1mEeqhUNeKJfLXDg _kLzi4I1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMb1BI1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMb1A41mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMccEY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMccEo1mEeqhUNeKJfLXDg _kLzi441mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMccEo1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMccEY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMdDIY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMdDIo1mEeqhUNeKJfLXDg _kLzi5o1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMdDIo1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMdDIY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMdqMY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMdqMo1mEeqhUNeKJfLXDg _kL0J8o1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMdqMo1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMdqMY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kMeRQY1mEeqhUNeKJfLXDg" name="" memberEnd="_kMeRQo1mEeqhUNeKJfLXDg _kL0J9Y1mEeqhUNeKJfLXDg">
        <ownedEnd xmi:id="_kMeRQo1mEeqhUNeKJfLXDg" name="" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kMeRQY1mEeqhUNeKJfLXDg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_kFoCYI1mEeqhUNeKJfLXDg" name="Main">
      <ownedComment xmi:id="_kLpK0I1mEeqhUNeKJfLXDg">
        <body>===================================================
                     contents
===================================================
---------------------ON SCREEN----------------------
- The player's spaceship -> lighter
- Ground obstacles shown as trees
- Ennemy's spaceships -> darker 
- A Parallax Background
- A Dark Road
- A ground
- Checkpoints as white and black lines

- RIGHT CORNER : TOTAL TIME &amp; TIME UNTIL DEATH
- LEFT CORNER : CURRENT SPEED &amp; SCORE &amp; DISTANCE UNTIL NEXT CHECKPOINT
 *</body>
      </ownedComment>
      <ownedComment xmi:id="_kLpK0Y1mEeqhUNeKJfLXDg">
        <body>------
                     Features</body>
      </ownedComment>
      <ownedComment xmi:id="_kLpK0o1mEeqhUNeKJfLXDg">
        <body>------
- the ability to fly left
- the ability to fly right
- the ability to fly up
- the ability to fly down
- the ability to restart a game
- the ability to show/hide all hitboxes
 *</body>
      </ownedComment>
      <ownedComment xmi:id="_kLpK041mEeqhUNeKJfLXDg">
        <body>------
                     Problems</body>
      </ownedComment>
      <ownedComment xmi:id="_kLpK1I1mEeqhUNeKJfLXDg">
        <body>------
- Perspective view not working perfectly on adversaries. 
- Once game is restarted, timer is often bugged.
- Parallax Background is not infinite
- Parallax Ground not implemented
===================================================</body>
      </ownedComment>
      <ownedAttribute xmi:id="_kK4V0I1mEeqhUNeKJfLXDg" name="V" visibility="private" isStatic="true" type="_kGjPcI1mEeqhUNeKJfLXDg" association="_kL9T4I1mEeqhUNeKJfLXDg"/>
      <ownedAttribute xmi:id="_kK484Y1mEeqhUNeKJfLXDg" name="P" visibility="private" isStatic="true" type="_kGXCMI1mEeqhUNeKJfLXDg" association="_kL968Y1mEeqhUNeKJfLXDg"/>
      <ownedAttribute xmi:id="_kK5j8I1mEeqhUNeKJfLXDg" name="A" visibility="private" isStatic="true" type="_kGpWEI1mEeqhUNeKJfLXDg" association="_kL969I1mEeqhUNeKJfLXDg"/>
      <ownedAttribute xmi:id="_kK5j8o1mEeqhUNeKJfLXDg" name="controlClavier" visibility="private" isStatic="true" type="_kFzokI1mEeqhUNeKJfLXDg" association="_kL-iAY1mEeqhUNeKJfLXDg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kLYsII1mEeqhUNeKJfLXDg" name="main" specification="_kFqeoI1mEeqhUNeKJfLXDg">
        <ownedParameter xmi:id="_kLYsIY1mEeqhUNeKJfLXDg" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kLYsIo1mEeqhUNeKJfLXDg" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>/**Creating JFrame.*/
		JFrame mainFrame = new JFrame(&quot;Course moto&quot;);

		mainFrame.setLayout(new FlowLayout(FlowLayout.CENTER));
	
		/**Initializing Models.*/
		V = new Vehicule();
		P = new Piste();
		
		/**Initializing View.*/
		A = new Affichage(V, P);
		
		/**Initializing Keyboard Listener ...*/
		controlClavier = new ControlClavier(A, V, P);
		/**... and adding it to the frame.*/
		mainFrame.addKeyListener(controlClavier);
		
		/**Adding our graphic contents.*/
		mainFrame.add(A);
		
		/**Showing the JFrame.*/
		mainFrame.pack();
		mainFrame.setVisible(true);
		mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		/**Showing starting instructions*/
		JOptionPane.showMessageDialog(null, 
										&quot;Space : Start game \n&quot; +
										&quot;H : Toggle Hitboxes&quot;
									 );
		
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_kFqeoI1mEeqhUNeKJfLXDg" name="main" isStatic="true" method="_kLYsII1mEeqhUNeKJfLXDg" raisedException="_kJiSAI1mEeqhUNeKJfLXDg">
        <ownedParameter xmi:id="_kFrFsI1mEeqhUNeKJfLXDg" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kFrswI1mEeqhUNeKJfLXDg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_kL9T4I1mEeqhUNeKJfLXDg" name="" memberEnd="_kL9T4Y1mEeqhUNeKJfLXDg _kK4V0I1mEeqhUNeKJfLXDg">
      <ownedEnd xmi:id="_kL9T4Y1mEeqhUNeKJfLXDg" name="" type="_kFoCYI1mEeqhUNeKJfLXDg" association="_kL9T4I1mEeqhUNeKJfLXDg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_kL968Y1mEeqhUNeKJfLXDg" name="" memberEnd="_kL968o1mEeqhUNeKJfLXDg _kK484Y1mEeqhUNeKJfLXDg">
      <ownedEnd xmi:id="_kL968o1mEeqhUNeKJfLXDg" name="" type="_kFoCYI1mEeqhUNeKJfLXDg" association="_kL968Y1mEeqhUNeKJfLXDg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_kL969I1mEeqhUNeKJfLXDg" name="" memberEnd="_kL969Y1mEeqhUNeKJfLXDg _kK5j8I1mEeqhUNeKJfLXDg">
      <ownedEnd xmi:id="_kL969Y1mEeqhUNeKJfLXDg" name="" type="_kFoCYI1mEeqhUNeKJfLXDg" association="_kL969I1mEeqhUNeKJfLXDg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_kL-iAY1mEeqhUNeKJfLXDg" name="" memberEnd="_kL-iAo1mEeqhUNeKJfLXDg _kK5j8o1mEeqhUNeKJfLXDg">
      <ownedEnd xmi:id="_kL-iAo1mEeqhUNeKJfLXDg" name="" type="_kFoCYI1mEeqhUNeKJfLXDg" association="_kL-iAY1mEeqhUNeKJfLXDg"/>
    </packagedElement>
    <profileApplication xmi:id="_jp5vsI1mEeqhUNeKJfLXDg">
      <eAnnotations xmi:id="_jp9aEI1mEeqhUNeKJfLXDg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_jp_PQI1mEeqhUNeKJfLXDg" base_Package="_h5wAsI1mEeqhUNeKJfLXDg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kFxMUI1mEeqhUNeKJfLXDg" base_Element="_kFwlQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kFxzYI1mEeqhUNeKJfLXDg" base_Element="_kFwlQI1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kFxzYY1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kF6WQY1mEeqhUNeKJfLXDg" base_Element="_kF6WQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kF69UI1mEeqhUNeKJfLXDg" base_Element="_kF6WQI1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kF69UY1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kGBD8I1mEeqhUNeKJfLXDg" base_Element="_kGAc4I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kGBD8Y1mEeqhUNeKJfLXDg" base_Element="_kGAc4I1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kGBD8o1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kGUl841mEeqhUNeKJfLXDg" base_Element="_kGUl8Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kGVNAI1mEeqhUNeKJfLXDg" base_Element="_kGUl8Y1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kGVNAY1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_kGchwI1mEeqhUNeKJfLXDg" genericsValue="Point" base_Element="_kGb6sY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Generics xmi:id="_kGdv4I1mEeqhUNeKJfLXDg" genericsValue="CheckPoint" base_Element="_kGdI0I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Generics xmi:id="_kGeW8I1mEeqhUNeKJfLXDg" genericsValue="Obstacle" base_Element="_kGdv4Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Generics xmi:id="_kGflEI1mEeqhUNeKJfLXDg" genericsValue="Opponent" base_Element="_kGe-AI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJhq8I1mEeqhUNeKJfLXDg" base_Element="_kJhD4I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJi5EI1mEeqhUNeKJfLXDg" base_Element="_kJiSAI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJi5Eo1mEeqhUNeKJfLXDg" base_Element="_kJi5EY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJjgIY1mEeqhUNeKJfLXDg" base_Element="_kJjgII1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJlVUI1mEeqhUNeKJfLXDg" base_Element="_kJkuQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJl8YI1mEeqhUNeKJfLXDg" base_Element="_kJlVUY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJmjcI1mEeqhUNeKJfLXDg" base_Element="_kJl8YY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJo_sI1mEeqhUNeKJfLXDg" base_Element="_kJoYoI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJpmwI1mEeqhUNeKJfLXDg" base_Element="_kJo_sY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJywsI1mEeqhUNeKJfLXDg" base_Element="_kJxikI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ10AI1mEeqhUNeKJfLXDg" base_Element="_kJ1M8I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ8hsI1mEeqhUNeKJfLXDg" base_Element="_kJ7TkI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ9IwI1mEeqhUNeKJfLXDg" base_Element="_kJ8hsY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ9v0I1mEeqhUNeKJfLXDg" base_Element="_kJ9IwY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ-W4I1mEeqhUNeKJfLXDg" base_Element="_kJ9v0Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ-98I1mEeqhUNeKJfLXDg" base_Element="_kJ-W4Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kJ_lAI1mEeqhUNeKJfLXDg" base_Element="_kJ-98Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKAMEI1mEeqhUNeKJfLXDg" base_Element="_kJ_lAY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKAzIY1mEeqhUNeKJfLXDg" base_Element="_kKAzII1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKBaMY1mEeqhUNeKJfLXDg" base_Element="_kKBaMI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKCBQY1mEeqhUNeKJfLXDg" base_Element="_kKCBQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKCoUI1mEeqhUNeKJfLXDg" base_Element="_kKCBQo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKDPYI1mEeqhUNeKJfLXDg" base_Element="_kKCoUY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kKkz0o1mEeqhUNeKJfLXDg" base_Element="_kKkz0Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kKnQEo1mEeqhUNeKJfLXDg" base_Element="_kKnQEI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kKn3II1mEeqhUNeKJfLXDg" base_Element="_kKnQEI1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kKn3IY1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kKoeMI1mEeqhUNeKJfLXDg" base_Element="_kKn3Io1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kKpFQI1mEeqhUNeKJfLXDg" base_Element="_kKn3Io1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kKpFQY1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kKpsUI1mEeqhUNeKJfLXDg" base_Element="_kKpFQo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Annotations xmi:id="_kKpsUY1mEeqhUNeKJfLXDg" base_Element="_kKpFQo1mEeqhUNeKJfLXDg">
    <annotations xmi:id="_kKpsUo1mEeqhUNeKJfLXDg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK484I1mEeqhUNeKJfLXDg" base_Element="_kK4V0I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK484o1mEeqhUNeKJfLXDg" base_Element="_kK484Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK5j8Y1mEeqhUNeKJfLXDg" base_Element="_kK5j8I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK5j841mEeqhUNeKJfLXDg" base_Element="_kK5j8o1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK6LAI1mEeqhUNeKJfLXDg" base_Element="_kK5j9I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK6LAo1mEeqhUNeKJfLXDg" base_Element="_kK6LAY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK6yEI1mEeqhUNeKJfLXDg" base_Element="_kK6LA41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK6yFY1mEeqhUNeKJfLXDg" base_Element="_kK6yE41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kK7ZIY1mEeqhUNeKJfLXDg" base_Property="_kK7ZII1mEeqhUNeKJfLXDg" siblings="_kLpx4Y1mEeqhUNeKJfLXDg _kLpx5I1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK7ZIo1mEeqhUNeKJfLXDg" base_Element="_kK7ZII1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK8AMY1mEeqhUNeKJfLXDg" base_Element="_kK8AMI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK8nQI1mEeqhUNeKJfLXDg" base_Element="_kK8AMo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK8nQo1mEeqhUNeKJfLXDg" base_Element="_kK8nQY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK9OUY1mEeqhUNeKJfLXDg" base_Element="_kK9OUI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK9OU41mEeqhUNeKJfLXDg" base_Element="_kK9OUo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK91YI1mEeqhUNeKJfLXDg" base_Element="_kK9OVI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK91Yo1mEeqhUNeKJfLXDg" base_Element="_kK91YY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK-ccI1mEeqhUNeKJfLXDg" base_Element="_kK91Y41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK-cdI1mEeqhUNeKJfLXDg" base_Element="_kK-cc41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK_DgY1mEeqhUNeKJfLXDg" base_Element="_kK_DgI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK_Dg41mEeqhUNeKJfLXDg" base_Element="_kK_Dgo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kK_qkY1mEeqhUNeKJfLXDg" base_Property="_kK_qkI1mEeqhUNeKJfLXDg" siblings="_kLrAAY1mEeqhUNeKJfLXDg _kLrABI1mEeqhUNeKJfLXDg _kLrnEI1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK_qko1mEeqhUNeKJfLXDg" base_Element="_kK_qkI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Array xmi:id="_kLARoo1mEeqhUNeKJfLXDg" base_Element="_kLARoI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLA4sI1mEeqhUNeKJfLXDg" base_Element="_kLARoI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLA4so1mEeqhUNeKJfLXDg" base_Element="_kLA4sY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLBfwY1mEeqhUNeKJfLXDg" base_Element="_kLBfwI1mEeqhUNeKJfLXDg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_kLCG0Y1mEeqhUNeKJfLXDg" name="getHeight" method="_kLcWgI1mEeqhUNeKJfLXDg">
      <ownedParameter xmi:id="_kLCt4I1mEeqhUNeKJfLXDg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLCG0I1mEeqhUNeKJfLXDg" base_Property="_kLBfwI1mEeqhUNeKJfLXDg" siblings="_kLsOII1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:Generics xmi:id="_kLDU8I1mEeqhUNeKJfLXDg" genericsValue="CheckPoint" base_Element="_kLCt4Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLDU8o1mEeqhUNeKJfLXDg" base_Element="_kLDU8Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLD8A41mEeqhUNeKJfLXDg" base_Element="_kLD8Ao1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLEjEI1mEeqhUNeKJfLXDg" base_Element="_kLD8BI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLEjEo1mEeqhUNeKJfLXDg" base_Element="_kLEjEY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLFKIY1mEeqhUNeKJfLXDg" base_Element="_kLFKII1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLFxMI1mEeqhUNeKJfLXDg" base_Element="_kLFKIo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLFxMo1mEeqhUNeKJfLXDg" base_Element="_kLFxMY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLGYQI1mEeqhUNeKJfLXDg" base_Element="_kLFxM41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLGYQ41mEeqhUNeKJfLXDg" base_Property="_kLGYQY1mEeqhUNeKJfLXDg" siblings="_kLtcQI1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLG_UI1mEeqhUNeKJfLXDg" base_Element="_kLGYQY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLG_Uo1mEeqhUNeKJfLXDg" base_Property="_kLG_UY1mEeqhUNeKJfLXDg" siblings="_kLtcRI1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLG_U41mEeqhUNeKJfLXDg" base_Element="_kLG_UY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLHmYY1mEeqhUNeKJfLXDg" base_Property="_kLHmYI1mEeqhUNeKJfLXDg" siblings="_kLuDUI1mEeqhUNeKJfLXDg _kLuDU41mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLHmYo1mEeqhUNeKJfLXDg" base_Element="_kLHmYI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLINcI1mEeqhUNeKJfLXDg" base_Property="_kLHmY41mEeqhUNeKJfLXDg" siblings="_kLuDVo1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLINcY1mEeqhUNeKJfLXDg" base_Element="_kLHmY41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLINc41mEeqhUNeKJfLXDg" base_Element="_kLINco1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLI0go1mEeqhUNeKJfLXDg" base_Element="_kLI0gY1mEeqhUNeKJfLXDg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_kLJbkY1mEeqhUNeKJfLXDg" name="getTrackL" method="_kLgA4I1mEeqhUNeKJfLXDg">
      <ownedParameter xmi:id="_kLKCoI1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_kLI0g41mEeqhUNeKJfLXDg" genericsValue="Point" base_Element="_kLI0gY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLJbkI1mEeqhUNeKJfLXDg" base_Property="_kLI0gY1mEeqhUNeKJfLXDg" siblings="_kLuqYo1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:Generics xmi:id="_kLJbko1mEeqhUNeKJfLXDg" genericsValue="Point" base_Element="_kLJbkY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLKCoo1mEeqhUNeKJfLXDg" base_Element="_kLKCoY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Generics xmi:id="_kLKpsI1mEeqhUNeKJfLXDg" genericsValue="Obstacle" base_Element="_kLKCo41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLKpsY1mEeqhUNeKJfLXDg" base_Element="_kLKCo41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Generics xmi:id="_kLLQwI1mEeqhUNeKJfLXDg" genericsValue="Opponent" base_Element="_kLKpso1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLLQwY1mEeqhUNeKJfLXDg" base_Element="_kLKpso1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLMe4I1mEeqhUNeKJfLXDg" base_Property="_kLL30I1mEeqhUNeKJfLXDg" siblings="_kLv4gI1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLMe4Y1mEeqhUNeKJfLXDg" base_Element="_kLL30I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLNF8I1mEeqhUNeKJfLXDg" base_Property="_kLMe441mEeqhUNeKJfLXDg" siblings="_kLv4g41mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLNF8Y1mEeqhUNeKJfLXDg" base_Element="_kLMe441mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLNF841mEeqhUNeKJfLXDg" base_Property="_kLNF8o1mEeqhUNeKJfLXDg" siblings="_kLwfko1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLNF9I1mEeqhUNeKJfLXDg" base_Element="_kLNF8o1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLNtAY1mEeqhUNeKJfLXDg" base_Element="_kLNtAI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLNtA41mEeqhUNeKJfLXDg" base_Property="_kLNtAo1mEeqhUNeKJfLXDg" siblings="_kLwflY1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLNtBI1mEeqhUNeKJfLXDg" base_Element="_kLNtAo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLOUEo1mEeqhUNeKJfLXDg" base_Element="_kLOUEI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLPiMI1mEeqhUNeKJfLXDg" base_Element="_kLO7Io1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLPiM41mEeqhUNeKJfLXDg" base_Element="_kLPiMY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLQJQo1mEeqhUNeKJfLXDg" base_Element="_kLQJQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLQwUI1mEeqhUNeKJfLXDg" base_Element="_kLQJQ41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLQwUo1mEeqhUNeKJfLXDg" base_Element="_kLQwUY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLQwVI1mEeqhUNeKJfLXDg" base_Element="_kLQwU41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLRXYY1mEeqhUNeKJfLXDg" base_Element="_kLRXYI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLRXY41mEeqhUNeKJfLXDg" base_Property="_kLRXYo1mEeqhUNeKJfLXDg" siblings="_kLxttI1mEeqhUNeKJfLXDg _kLyUwY1mEeqhUNeKJfLXDg _kLyUxI1mEeqhUNeKJfLXDg _kLy70Y1mEeqhUNeKJfLXDg _kLy71I1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLRXZI1mEeqhUNeKJfLXDg" base_Element="_kLRXYo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Generics xmi:id="_kLSlgI1mEeqhUNeKJfLXDg" genericsValue="BufferedImage" base_Element="_kLR-cI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLSlgY1mEeqhUNeKJfLXDg" base_Property="_kLR-cI1mEeqhUNeKJfLXDg" siblings="_kLzi4I1mEeqhUNeKJfLXDg _kLzi441mEeqhUNeKJfLXDg _kLzi5o1mEeqhUNeKJfLXDg _kL0J8o1mEeqhUNeKJfLXDg _kL0J9Y1mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLSlgo1mEeqhUNeKJfLXDg" base_Element="_kLR-cI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLTMkY1mEeqhUNeKJfLXDg" base_Property="_kLTMkI1mEeqhUNeKJfLXDg" siblings="_kL0xB41mEeqhUNeKJfLXDg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLTzoI1mEeqhUNeKJfLXDg" base_Element="_kLTMkI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Array xmi:id="_kLTzo41mEeqhUNeKJfLXDg" base_Element="_kLTzoY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLUasI1mEeqhUNeKJfLXDg" base_Element="_kLTzoY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLUaso1mEeqhUNeKJfLXDg" base_Element="_kLUasY1mEeqhUNeKJfLXDg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_kLVBwY1mEeqhUNeKJfLXDg" name="getStarttime" method="_kLlgcY1mEeqhUNeKJfLXDg">
      <ownedParameter xmi:id="_kLVo0Y1mEeqhUNeKJfLXDg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_kLVo0I1mEeqhUNeKJfLXDg" name="setStarttime" method="_kLlgc41mEeqhUNeKJfLXDg"/>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLVBwI1mEeqhUNeKJfLXDg" base_Property="_kLUasY1mEeqhUNeKJfLXDg" siblings="_kL1YEI1mEeqhUNeKJfLXDg" root="true"/>
  <uml:OpaqueBehavior xmi:id="_kLbIYY1mEeqhUNeKJfLXDg" name="getVal" specification="_kF-nsI1mEeqhUNeKJfLXDg">
    <ownedParameter xmi:id="_kLbIYo1mEeqhUNeKJfLXDg" name="i">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_kLbIY41mEeqhUNeKJfLXDg" type="_kF8ygI1mEeqhUNeKJfLXDg" direction="return"/>
    <language>java</language>
    <body>return list[i];
	    </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_kLcWgI1mEeqhUNeKJfLXDg" name="getHeight" specification="_kLCG0Y1mEeqhUNeKJfLXDg">
    <ownedParameter xmi:id="_kLcWgY1mEeqhUNeKJfLXDg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return height;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_kLgA4I1mEeqhUNeKJfLXDg" name="getTrackL" specification="_kLJbkY1mEeqhUNeKJfLXDg">
    <ownedParameter xmi:id="_kLgA4Y1mEeqhUNeKJfLXDg" type="_kJxikI1mEeqhUNeKJfLXDg" direction="return"/>
    <language>java</language>
    <body>return trackL;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_kLlgcY1mEeqhUNeKJfLXDg" name="getStarttime" specification="_kLVBwY1mEeqhUNeKJfLXDg">
    <ownedParameter xmi:id="_kLlgco1mEeqhUNeKJfLXDg" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </ownedParameter>
    <language>java</language>
    <body>return starttime;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_kLlgc41mEeqhUNeKJfLXDg" name="setStarttime" specification="_kLVo0I1mEeqhUNeKJfLXDg">
    <language>java</language>
    <body>starttime = System.currentTimeMillis();
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLpx4o1mEeqhUNeKJfLXDg" base_Property="_kLpx4Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLpx441mEeqhUNeKJfLXDg" base_Element="_kLpx4Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLpx5Y1mEeqhUNeKJfLXDg" base_Property="_kLpx5I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLqY8I1mEeqhUNeKJfLXDg" base_Element="_kLpx5I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLrAAo1mEeqhUNeKJfLXDg" base_Property="_kLrAAY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLrAA41mEeqhUNeKJfLXDg" base_Element="_kLrAAY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLrABY1mEeqhUNeKJfLXDg" base_Property="_kLrABI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLrABo1mEeqhUNeKJfLXDg" base_Element="_kLrABI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLrnEY1mEeqhUNeKJfLXDg" base_Property="_kLrnEI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLrnEo1mEeqhUNeKJfLXDg" base_Element="_kLrnEI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLsOIY1mEeqhUNeKJfLXDg" base_Property="_kLsOII1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLsOIo1mEeqhUNeKJfLXDg" base_Element="_kLsOII1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLtcQY1mEeqhUNeKJfLXDg" base_Property="_kLtcQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLtcQo1mEeqhUNeKJfLXDg" base_Element="_kLtcQI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLtcRY1mEeqhUNeKJfLXDg" base_Property="_kLtcRI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLtcRo1mEeqhUNeKJfLXDg" base_Element="_kLtcRI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLuDUY1mEeqhUNeKJfLXDg" base_Property="_kLuDUI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLuDUo1mEeqhUNeKJfLXDg" base_Element="_kLuDUI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLuDVI1mEeqhUNeKJfLXDg" base_Property="_kLuDU41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLuDVY1mEeqhUNeKJfLXDg" base_Element="_kLuDU41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLuqYI1mEeqhUNeKJfLXDg" base_Property="_kLuDVo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLuqYY1mEeqhUNeKJfLXDg" base_Element="_kLuDVo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLuqY41mEeqhUNeKJfLXDg" base_Property="_kLuqYo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLuqZI1mEeqhUNeKJfLXDg" base_Element="_kLuqYo1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLv4gY1mEeqhUNeKJfLXDg" base_Property="_kLv4gI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLv4go1mEeqhUNeKJfLXDg" base_Element="_kLv4gI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLwfkI1mEeqhUNeKJfLXDg" base_Property="_kLv4g41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLwfkY1mEeqhUNeKJfLXDg" base_Element="_kLv4g41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLwfk41mEeqhUNeKJfLXDg" base_Property="_kLwfko1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLwflI1mEeqhUNeKJfLXDg" base_Element="_kLwfko1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLxGoI1mEeqhUNeKJfLXDg" base_Property="_kLwflY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLxGoY1mEeqhUNeKJfLXDg" base_Element="_kLwflY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLxttY1mEeqhUNeKJfLXDg" base_Property="_kLxttI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLyUwI1mEeqhUNeKJfLXDg" base_Element="_kLxttI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLyUwo1mEeqhUNeKJfLXDg" base_Property="_kLyUwY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLyUw41mEeqhUNeKJfLXDg" base_Element="_kLyUwY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLyUxY1mEeqhUNeKJfLXDg" base_Property="_kLyUxI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLy70I1mEeqhUNeKJfLXDg" base_Element="_kLyUxI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLy70o1mEeqhUNeKJfLXDg" base_Property="_kLy70Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLy7041mEeqhUNeKJfLXDg" base_Element="_kLy70Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLy71Y1mEeqhUNeKJfLXDg" base_Property="_kLy71I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLy71o1mEeqhUNeKJfLXDg" base_Element="_kLy71I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLzi4Y1mEeqhUNeKJfLXDg" base_Property="_kLzi4I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLzi4o1mEeqhUNeKJfLXDg" base_Element="_kLzi4I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kLzi5I1mEeqhUNeKJfLXDg" base_Property="_kLzi441mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLzi5Y1mEeqhUNeKJfLXDg" base_Element="_kLzi441mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kL0J8I1mEeqhUNeKJfLXDg" base_Property="_kLzi5o1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kL0J8Y1mEeqhUNeKJfLXDg" base_Element="_kLzi5o1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kL0J841mEeqhUNeKJfLXDg" base_Property="_kL0J8o1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kL0J9I1mEeqhUNeKJfLXDg" base_Element="_kL0J8o1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kL0J9o1mEeqhUNeKJfLXDg" base_Property="_kL0J9Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kL0xAI1mEeqhUNeKJfLXDg" base_Element="_kL0J9Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kL0xCI1mEeqhUNeKJfLXDg" base_Property="_kL0xB41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kL0xCY1mEeqhUNeKJfLXDg" base_Element="_kL0xB41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_kL1YEY1mEeqhUNeKJfLXDg" base_Property="_kL1YEI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kL1YEo1mEeqhUNeKJfLXDg" base_Element="_kL1YEI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL968I1mEeqhUNeKJfLXDg" base_Element="_kL9T4I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL96841mEeqhUNeKJfLXDg" base_Element="_kL968Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL-iAI1mEeqhUNeKJfLXDg" base_Element="_kL969I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL-iA41mEeqhUNeKJfLXDg" base_Element="_kL-iAY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL_JEI1mEeqhUNeKJfLXDg" base_Element="_kL-iBI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL_wII1mEeqhUNeKJfLXDg" base_Element="_kL_JEY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kL_wI41mEeqhUNeKJfLXDg" base_Element="_kL_wIY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMAXMI1mEeqhUNeKJfLXDg" base_Element="_kL_wJI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMA-QI1mEeqhUNeKJfLXDg" base_Element="_kMAXMY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMA-Q41mEeqhUNeKJfLXDg" base_Element="_kMA-QY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMBlUI1mEeqhUNeKJfLXDg" base_Element="_kMA-RI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMBlU41mEeqhUNeKJfLXDg" base_Element="_kMBlUY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMCMYI1mEeqhUNeKJfLXDg" base_Element="_kMBlVI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMCMY41mEeqhUNeKJfLXDg" base_Element="_kMCMYY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMCzco1mEeqhUNeKJfLXDg" base_Element="_kMCzcI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMDagI1mEeqhUNeKJfLXDg" base_Element="_kMCzc41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMDag41mEeqhUNeKJfLXDg" base_Element="_kMDagY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMEBkI1mEeqhUNeKJfLXDg" base_Element="_kMDahI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMEooI1mEeqhUNeKJfLXDg" base_Element="_kMEBkY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMEoo41mEeqhUNeKJfLXDg" base_Element="_kMEooY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMFPsI1mEeqhUNeKJfLXDg" base_Element="_kMEopI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMF2wI1mEeqhUNeKJfLXDg" base_Element="_kMFPsY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMGd0I1mEeqhUNeKJfLXDg" base_Element="_kMF2wY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMGd041mEeqhUNeKJfLXDg" base_Element="_kMGd0Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMHE4I1mEeqhUNeKJfLXDg" base_Element="_kMGd1I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMHE441mEeqhUNeKJfLXDg" base_Element="_kMHE4Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMHr8I1mEeqhUNeKJfLXDg" base_Element="_kMHE5I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMHr841mEeqhUNeKJfLXDg" base_Element="_kMHr8Y1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMam4I1mEeqhUNeKJfLXDg" base_Element="_kMITAI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMbN8o1mEeqhUNeKJfLXDg" base_Element="_kMbN8I1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMb1Ao1mEeqhUNeKJfLXDg" base_Element="_kMb1AI1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMccEI1mEeqhUNeKJfLXDg" base_Element="_kMb1A41mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMdDII1mEeqhUNeKJfLXDg" base_Element="_kMccEY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMdqMI1mEeqhUNeKJfLXDg" base_Element="_kMdDIY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMeRQI1mEeqhUNeKJfLXDg" base_Element="_kMdqMY1mEeqhUNeKJfLXDg"/>
  <UMLLabProfile:Reference xmi:id="_kMe4UI1mEeqhUNeKJfLXDg" base_Element="_kMeRQY1mEeqhUNeKJfLXDg"/>
</xmi:XMI>
